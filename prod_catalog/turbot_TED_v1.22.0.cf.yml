AWSTemplateFormatVersion: '2010-09-09'

Description: Turbot Enterprise Database 1.22.0

Metadata:

  AWS::CloudFormation::Interface:

    ParameterGroups:

      - Label:
          default: Hive Configuration
        Parameters:
          - HiveName
          - PrimaryRegion

      - Label:
          default: Database - Configuration
        Parameters:
          - InstanceClass
          - ReplicaInstanceClass
          - DatabaseMaintenanceWindow

      - Label:
          default: Database - Replication
        Parameters:
          - DatabasePrimaryEndpoint

      - Label:
          default: Database - Advanced - High Availability
        Parameters:
          - FailoverInstance
          - ReadReplicaInstance

      - Label:
          default: Database - Advanced - Engine
        Parameters:
          - Engine
          - EngineFamily
          - EngineVersion
          - ReadReplicaEngineVersion
          - AllowMajorVersionUpgrade

      - Label:
          default: Database - Advanced - Storage
        Parameters:
          - StorageType
          - AllocatedStorage
          - MaxAllocatedStorage
          - AllocatedIops

      - Label:
          default: Database - Advanced - Encryption
        Parameters:
          - EncryptDatabase
          - RedisEncryptionKey
          - KeyAliasSsmValue

      - Label:
          default: Database - Advanced - Authentication
        Parameters:
          - MasterUsername
          - MasterPassword
          - UseIAMAuth

      - Label:
          default: Database - Advanced - Backup & Snapshots
        Parameters:
          - DeletionProtection
          - BackupRetentionPeriod
          - DailyAutomatedBackup
          - WeeklyAutomatedBackup
          - MonthlyAutomatedBackup
          - AutomatedBackupPlanRoleArn
          - DeleteAutomatedBackups
          - BackupVaultNameFormat
          - CopyTagsToSnapshot

      - Label:
          default: Database - Advanced - Parameters
        Parameters:
          - HiveRDSParamGroup
          - SharedBuffer
          - LogStatement
          - LogMinDurationStatement
          - LogRetentionPeriod
          - PerformanceInsights
          - MaxConnections
          - MaxConnectionsAlarmThreshold
          - DeadlockTimeout
          - IdleInTransactionSessionTimeout
          - StatementTimeout
          - RdsAdminLoggingLevel
          - TrackFunction
          - WalKeepSize

      - Label:
          default: Cache
        Parameters:
          - UseElastiCache
          - CacheNodeType
          - CacheNumberOfNodes
          - EnableMultiAZ

      - Label:
          default: Advanced - Foundation Parameters
        Parameters:
          - DatabaseSubnetGroupValue
          - VpcSecurityGroupsValue
          - AuditTrailRetentionDaysValue
          - FoundationAlphaRegion

      - Label:
          default: Advanced - Foundation Overrides
        Parameters:
          - DatabaseSubnetGroup
          - VpcSecurityGroups
          - AuditTrailRetentionDays

      - Label:
          default: Advanced - Infrastructure
        Parameters:
          - ResourceNamePrefix
          - ParameterDeploymentTrigger
          - HiveDevelopmentCommands
          - FoundationDynamicBucketName
          - FoundationLogBucketNameFormat
          - AuditTrailLogGroupNameFormat
          - ProcessLogInHiveBucketRetentionDays

    ParameterLabels:

      # Hive Configuration
      HiveName:
        default: Database Hive Name
      PrimaryRegion:
        default: Primary Region
      FoundationAlphaRegion:
        default: Foundation Alpha Region

      # Replication Configuration
      DatabasePrimaryEndpoint:
        default: Primary endpoint

      # Common settings
      InstanceClass:
        default: Instance Type for DB
      ReplicaInstanceClass:
        default: Instance Type for Replica DB
      AllocatedStorage:
        default: Allocated Storage in GB
      MaxAllocatedStorage:
        default: Maximum Allocated Storage limit in GB

      # foundation parameters
      DatabaseSubnetGroupValue:
        default: Database Subnet Group SSM Parameter

      VpcSecurityGroupsValue:
        default: VPC Security Groups SSM Parameter

      AuditTrailRetentionDaysValue:
        default: Audit Trail Retention Days SSM Parameter

      # foundation overrides
      DatabaseSubnetGroup:
        default: Database Subnet Group
      VpcSecurityGroups:
        default: VPC Security Groups
      AuditTrailRetentionDays:
        default: Audit Trail log retention in days

      # High availability
      FailoverInstance:
        default: Enable Multi-AZ Failover
      ReadReplicaInstance:
        default: Enable Read Replica for this region

      # Advanced - DB engine
      Engine:
        default: DB Engine
      EngineFamily:
        default: DB Engine Parameter Group Family
      EngineVersion:
        default: DB Engine Version
      ReadReplicaEngineVersion:
        default: Read Replica DB Engine Version
      AllowMajorVersionUpgrade:
        default: Allow major version upgrade

      # Cache Cluster
      CacheNodeType:
        default: Cache Node Type
      CacheNumberOfNodes:
        default: Cache Number Of Nodes
      EnableMultiAZ:
        default: Enable Multi-AZ

      # Advanced - Storage
      StorageType:
        default: Storage Type
      AllocatedIops:
        default: Provisioned IOPs (only used if Storage Type is io1)

      # Advanced - Encryption
      EncryptDatabase:
        default: Use AWS KMS DB Encryption
      RedisEncryptionKey:
        default: Encryption method for Redis
      KeyAliasSsmValue:
        default: Key Alias Parameter

      # Advanced - Authentication
      MasterUsername:
        default: Master User Name for DB
      UseIAMAuth:
        default: Use AWS IAM for DB Access

      # Advanced - Backup & Snapshots
      BackupRetentionPeriod:
        default: BackupRetentionPeriod in Days for Daily Backup
      DailyAutomatedBackup:
        default: Retention Period in Days for Daily Backup using Backup Service
      WeeklyAutomatedBackup:
        default: Retention Period in Days for Weekly Backup using Backup Service
      MonthlyAutomatedBackup:
        default: Retention Period in Days for Monthly Backup using Backup Service
      AutomatedBackupPlanRoleArn:
        default: Automated Backup Plan Role
      DeleteAutomatedBackups:
        default: Delete Automated Backups
      BackupVaultNameFormat:
        default: Backup Vault Name Format
      CopyTagsToSnapshot:
        default: Copy DB tags to snapshots
      DeletionProtection:
        default: Deletion Protection

      # Advanced - Parameters
      LogStatement:
        default: Type of statements to be logged
      LogMinDurationStatement:
        default: Minimum Duration to log statement in ms
      LogRetentionPeriod:
        default: Delete logs older than N minutes
      MaxConnections:
        default: Maximum number of concurrent connections
      MaxConnectionsAlarmThreshold:
        default: Alarm threshold for maximum number of concurrent connections
      DeadlockTimeout:
        default: Deadlock timeout period
      IdleInTransactionSessionTimeout:
        default: Duration of Idling Transaction Session
      StatementTimeout:
        default: Maximum Allowed Duration of Statement
      PerformanceInsights:
        default: Performance Insights
      RdsAdminLoggingLevel:
        default: RDS Admin logging level
      TrackFunction:
        default: Function-level database activity tracking
      FoundationDynamicBucketName:
        default: Dynamic Bucket Name specified in TEF
      FoundationLogBucketNameFormat:
        default: Log Bucket Name format specified in TEF
      AuditTrailLogGroupNameFormat:
        default: Audit Trail Log Group format
      ProcessLogInHiveBucketRetentionDays:
        default: Hive Bucket Process Log Objects Retention Days
      HiveRDSParamGroup:
        default: Hive RDS Parameter Group
      SharedBuffer:
        default: Shared Buffers
      WalKeepSize:
        default: WAL Keep Size

      # Database - Maintenance
      DatabaseMaintenanceWindow:
        default: Maintenace Window for Database

      # Advanced - Turbot
      ResourceNamePrefix:
        default: Resource Name Prefix

      AuditTrailRetentionDays:
        default: Audit Trail retention in days

      ParameterDeploymentTrigger:
        default: Parameter Deployment Trigger

      UseElastiCache:
        default: ElastiCache

      HiveDevelopmentCommands:
        default: Development commands for running Hive Manager. Do not set unless specifically instructed by Turbot Support Team.

Parameters:

  #
  # Environment
  #

  HiveName:
    Description: Name For the Database Hive.
    Type: String
    Default: newton
    AllowedPattern: "^[a-z][a-z0-9_-]*[a-z0-9]$"

  PrimaryRegion:
    Description: Region where the primary Database currently resides. If set to empty, Turbot will use the Alpha region set by TEF as the database's primary region.
    Type: String
    Default: ""
    AllowedValues:
      - ""
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-south-1
      - ap-southeast-1
      - ap-southeast-2
      - ca-central-1
      - cn-north-1
      - cn-northwest-1
      - eu-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - sa-east-1
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      # US Gov East 1 is not supported, however this is left here for development purpose
      - us-gov-east-1

  FoundationAlphaRegion:
    Description: Alpha region specified in TEF.
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/turbot/enterprise/alpha_region"

  #
  # Replication configuration
  #

  DatabasePrimaryEndpoint:
    Description: |
      Endpoint for the hive primary, used for cross-region replication
      settings. Only required in non-primary regions. Available as
      "HivePrimaryEndpointAddress" in the CloudFormation Outputs section of the
      primary region.
    Type: String
    Default: ""
    AllowedPattern: "^(|[a-z0-9-]+\\.[a-z0-9]+\\.[a-z0-9-]+\\.rds.amazonaws.com)$"

  #
  # Common Settings
  #

  InstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t3.small
    AllowedValues:
      - db.m6g.large
      - db.m6g.xlarge
      - db.m6g.2xlarge
      - db.m6g.4xlarge
      - db.m6g.8xlarge
      - db.m6g.12xlarge
      - db.m6g.16xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.8xlarge
      - db.m5.12xlarge
      - db.m5.16xlarge
      - db.m5.24xlarge
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r6g.large
      - db.r6g.xlarge
      - db.r6g.2xlarge
      - db.r6g.4xlarge
      - db.r6g.8xlarge
      - db.r6g.12xlarge
      - db.r6g.16xlarge
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.8xlarge
      - db.r5.12xlarge
      - db.r5.16xlarge
      - db.r5.24xlarge
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      # Needed for Gov Cloud
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
    ConstraintDescription: must select a valid database instance type.

  ReplicaInstanceClass:
    Description: |
      The read replica database instance type
    Type: String
    Default: Same as Primary DB
    AllowedValues:
      - Same as Primary DB
      - db.m6g.large
      - db.m6g.xlarge
      - db.m6g.2xlarge
      - db.m6g.4xlarge
      - db.m6g.8xlarge
      - db.m6g.12xlarge
      - db.m6g.16xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.8xlarge
      - db.m5.12xlarge
      - db.m5.16xlarge
      - db.m5.24xlarge
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r6g.large
      - db.r6g.xlarge
      - db.r6g.2xlarge
      - db.r6g.4xlarge
      - db.r6g.8xlarge
      - db.r6g.12xlarge
      - db.r6g.16xlarge
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.8xlarge
      - db.r5.12xlarge
      - db.r5.16xlarge
      - db.r5.24xlarge
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      # Needed for Gov Cloud
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
    ConstraintDescription: must select a valid database instance type.

  AllocatedStorage:
    Description: |
      DB Storage allocated (GB). To enable storage auto scaling specify Max Allocated Storage
      parameter higher than the Allocated Storage. This value is the initial storage that will
      be allocated to this Hive database. AWS will automatically resize the allocated up to
      the Max Allocated Storage capacity.

      NOTE: When RDS autoscale the database storage (if this option is enabled), it will cause an inconsistency
      between CloudFormation and RDS. Updating Postgres related parameter may cause an issue.
      It's advisable to first sync the Allocated Storage parameter to get CloudFormation and RDS to sync,
      then continue to update other parameters.
    Type: Number
    MinValue: 50
    MaxValue: 32768
    Default: 200

  MaxAllocatedStorage:
    Description: |
      To enable storage auto scaling, specify the maximum DB Storage limit to which the instance can be
      auto scaled, this should be greater than the Allocated Storage size but less than 65536 (GB).
      Leave the value to default 0, to disable storage auto scaling. Note that storage auto scaling is
      supported only for General Purpose SSD or Provisioned IOPS SSD storage type.

      NOTE: When RDS autoscale the database storage, it will cause an inconsistency between CloudFormation
      and RDS. Updating Postgres related parameter may cause an issue. It's advisable to first sync the
      Allocated Storage parameter to get CloudFormation and RDS to sync, then continue to update other
      parameters.
    Type: Number
    MinValue: 0
    MaxValue: 65536
    Default: 1000

  DatabaseSubnetGroupValue:
    Description: >
      Name of the SSM Parameter that contains the DB Subnet Group settings to use for the database,
      as configured by the Turbot Enterprise Foundation Stack (TEF).
      YOU SHOULD ONLY CHANGE THIS PARAMETER IF YOU USED A NON-DEFAULT PREFIX IN THE TEF STACK
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/turbot/enterprise/db_subnet_group"

  VpcSecurityGroupsValue:
    Description: >
      Name of the SSM Parameter that contains the DB Security Group settings to use for the database,
      as configured by the Turbot Enterprise Foundation Stack (TEF).
      YOU SHOULD ONLY CHANGE THIS PARAMETER IF YOU USED A NON-DEFAULT PREFIX IN THE TEF STACK
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/turbot/enterprise/db_security_group"


  AuditTrailRetentionDaysValue:
    Description: >
      Name of the SSM Parameter that contains the audit trail retention days to use for the hive,
      as configured by the Turbot Enterprise Foundation Stack (TEF).
      YOU SHOULD ONLY CHANGE THIS PARAMETER IF YOU USED A NON-DEFAULT PREFIX IN THE TEF STACK
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/turbot/enterprise/audit_trail_retention_days"

  MasterPassword:
    Description: DB Master Password. Leave blank for Turbot to reset the password. Note that the new password will not be displayed.
    Type: String
    Default: ""
    NoEcho: true

  DatabaseSubnetGroup:
    Description: >
      Name of the DB Subnet Group to use for the Turbot database.
      By default, this parameter is blank and will use the SSM parameter as defined in the TEF stack - ONLY CHANGE THIS IS YOU KNOW WHAT YOU'RE DOING!
    Type: String
    Default: ""
    AllowedPattern: "^([a-z0-9].+)*$"

  VpcSecurityGroups:
    Description: >
      Security groups for the database instances.
      By default, this parameter is blank and will use the SSM parameter as defined in the TEF stack - ONLY CHANGE THIS IS YOU KNOW WHAT YOU'RE DOING!
    Default: ""
    Type: CommaDelimitedList

  AuditTrailRetentionDays:
    Description: |
      Days to retain audit trail logs for all workspaces in this hive.
      By default, this parameter is blank and will use the SSM parameter as defined in the TEF stack - ONLY CHANGE THIS IS YOU KNOW WHAT YOU'RE DOING!
    Type: String
    Default: ""
    AllowedValues:
      - ""
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653

  #
  # High Availability
  #

  FailoverInstance:
    Description: >
      If true, and this region includes the primary instance, then create a
      failover instance in a different availability zone to the primary
      instance. In production, a failover instance is recommended.
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "true"

  ReadReplicaInstance:
    Description: >
      If true, create a read replica for the hive in this region. In
      production, it's recommended to have a read replica instance in
      each region where Turbot is running (including the region where
      the primary instance resides).
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"


  #
  # Database Engine
  #

  Engine:
    Description: Turbot database engine for primary data storage. Currently only Postgres is supported.
    Type: String
    Default: postgres
    AllowedValues:
      - postgres

  EngineFamily:
    Description: Database engine parameter group family. Should reflect the current database major version.
    Type: String
    Default: postgres13
    AllowedValues:
      - postgres11
      - postgres12
      - postgres13

  EngineVersion:
    Description: >
      Database engine version. Should be the same as the Read Replica DB Engine
      Version, but must be upgraded after the read replica.
    Type: String
    # Note: as of 2019/10/14 GovCloud only supports Postgres 11.4
    Default: "13.4"
    AllowedValues:
      - "11.1"
      - "11.2"
      - "11.4"
      - "11.5"
      - "11.6"
      - "11.8"
      - "11.9"
      - "11.10"
      - "11.11"
      - "12.4"
      - "12.5"
      - "12.6"
      - "13.1"
      - "13.2"
      - "13.3"
      - "13.4"

  ReadReplicaEngineVersion:
    Description: >
      Database engine version for the read replica. Should be the same as the
      DB Engine Version, but must be upgraded before the primary.
    Type: String
    Default: "13.4"
    AllowedValues:
      - "11.1"
      - "11.2"
      - "11.4"
      - "11.5"
      - "11.6"
      - "11.8"
      - "11.9"
      - "11.10"
      - "11.11"
      - "12.4"
      - "12.5"
      - "12.6"
      - "13.1"
      - "13.2"
      - "13.3"
      - "13.4"

  AllowMajorVersionUpgrade:
    Description: >
      If the engine version requests it, allow major version upgrades to be
      applied to the database through CloudFormation.
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"


  #
  # Cache Cluser
  #

  CacheNodeType:
    Description: >
      Type of cache node. WARNING:  If changing the Elasticache node size, the `Access Control Option` parameter must be set to `User Group Access Control List` and `User Group Access Control List` set to `<prefix>-<hive>`.
    Type: String
    AllowedValues:
      - "cache.m5.large"
      - "cache.m5.xlarge"
      - "cache.m5.2xlarge"
      - "cache.m5.4xlarge"
      - "cache.m5.12xlarge"
      - "cache.m5.24xlarge"
      - "cache.m6g.large"
      - "cache.m6g.xlarge"
      - "cache.m6g.2xlarge"
      - "cache.m6g.4xlarge"
      - "cache.m6g.8xlarge"
      - "cache.m6g.12xlarge"
      - "cache.m6g.16xlarge"
      - "cache.m4.large"
      - "cache.m4.xlarge"
      - "cache.m4.2xlarge"
      - "cache.m4.4xlarge"
      - "cache.m4.10xlarge"
      - "cache.t3.micro"
      - "cache.t3.small"
      - "cache.t3.medium"
      - "cache.t2.micro"
      - "cache.t2.small"
      - "cache.t2.medium"
      - "cache.r5.large"
      - "cache.r5.xlarge"
      - "cache.r5.2xlarge"
      - "cache.r5.4xlarge"
      - "cache.r5.12xlarge"
      - "cache.r5.24xlarge"
      - "cache.r6g.large"
      - "cache.r6g.xlarge"
      - "cache.r6g.2xlarge"
      - "cache.r6g.4xlarge"
      - "cache.r6g.8xlarge"
      - "cache.r6g.12xlarge"
      - "cache.r6g.16xlarge"
      - "cache.r4.large"
      - "cache.r4.xlarge"
      - "cache.r4.2xlarge"
      - "cache.r4.4xlarge"
      - "cache.r4.8xlarge"
      - "cache.r4.16xlarge"
    Default: "cache.t3.medium"

  CacheNumberOfNodes:
    Description: >
      Number of cache nodes in a Elasticache Replication Group. By default the value is 1 and creates a single node architecture. Enter a value between 2 to 6 for a multi node architecture.
      WARNING: it is not possible to change the value from 1 to 2 without destroying the cluster and re-creating.
# In case the MaxValue needs to be changed, the conditions for Elasticache alarms will also have to be changed.
    Type: Number
    MinValue: 1
    MaxValue: 6
    Default: 1

  EnableMultiAZ:
    Description: Enable Multi AZ in Elasticache Replication Group.
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  #
  # Advanced - Storage
  #

  StorageType:
    Description: DB Engine Version
    Type: String
    AllowedValues:
      - "standard"
      - "gp2"
      - "io1"
    Default: "gp2"

  AllocatedIops:
    Description: "Review details for valid ratios at https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-iops"
    Type: Number
    MinValue: 1000
    MaxValue: 1638400
    Default: 1000


  #
  # Advanced - Encryption
  #

  EncryptDatabase:
    Description: >
      Encryption method to use. If "aws/rds" then use the predefined AWS KMS
      key for RDS. If "Hive CMK" then create a customer managed key specific to
      the hive.
    Type: String
    AllowedValues:
      - aws/rds
      - Hive CMK
    Default: Hive CMK

  RedisEncryptionKey:
    Description: >
      Encryption method to use. By default ElastiCache offers encryption at-rest but user can choose to use customer managed key. For GovCloud, customer managed CMK for encryption at rest is not available.
    Type: String
    AllowedValues:
      - default
      - Hive CMK
    Default: Hive CMK

  KeyAliasSsmValue:
    Description: |
       KMS Key alias defined in Turbot Enterprise Foundation.
       YOU SHOULD ONLY CHANGE THIS PARAMETER IF YOU USED A NON-DEFAULT PREFIX IN THE TEF STACK
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/turbot/enterprise/foundation_key_alias"

  #
  # Advanced - Backup & Snapshots
  #

  DeletionProtection:
    Description: >
      If true, then protect database resources from deletion. Must be set to
      false before decommissioning.
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "true"

  BackupRetentionPeriod:
    Description: RDS automated backups will be retained for this many days.
    Type: Number
    MinValue: 0
    MaxValue: 35
    Default: 7

  DailyAutomatedBackup:
    Description: Daily backups, using backup service, will be retained for this many days. Preferred value is 10. Keep the value 0 in case daily backup is not needed.
    Type: Number
    MinValue: 0
    MaxValue: 50
    Default: 0

  WeeklyAutomatedBackup:
    Description: Weekly backups, using backup service, will be retained for this many days. Preferred value is 56. Keep the value 0 in case weekly backup is not needed.
    Type: Number
    MinValue: 0
    MaxValue: 100
    Default: 0

  MonthlyAutomatedBackup:
    Description: Monthly backups, using backup service, will be retained for this many days. Preferred value is 180. Keep the value 0 in case monthly backup is not needed.
    Type: Number
    MinValue: 0
    MaxValue: 300
    Default: 0

  AutomatedBackupPlanRoleArn:
    Description: >
      Role to be used for creating Automated Backups. Leave empty for Turbot to create this role.
      Specify the full ARN.
      If this role is specified, Turbot will not create the role and will use the given role.
    Type: String
    Default: ""

  DeleteAutomatedBackups:
    Description: Create final snapshot on deletion. If true, automated backups will be automatically deleted when the primary instance is deleted.
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  BackupVaultNameFormat:
    Description: Determines the name of the Backup Vault. Dynamic appends a semi-random string on the backup vault name.
    Type: String
    Default: "constant"
    AllowedValues:
      - "constant"
      - "dynamic"

  CopyTagsToSnapshot:
    Description: If true, tags will be automatically copied from the primary instance to its snapshots.
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "true"


  #
  # Advanced - Authentication
  #

  MasterUsername:
    Description: The database instance type
    Type: String
    Default: master

  UseIAMAuth:
    Description: Use AWS IAM for Db Access
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "true"

  #
  # Advanced - Parameter Group
  #

  HiveRDSParamGroup:
    Description: The Db Parameter Group to use. Choose HiveParamGroup13 for 13.x. To upgrade from 11.x to 12.x, select HiveParamGroup02 if you are on HiveParamGroup and vice versa.
    Type: String
    AllowedValues:
      - "HiveParamGroup"
      - "HiveParamGroup02"
      - "HiveParamGroup13"
    Default: "HiveParamGroup13"

  SharedBuffer:
    Description: shared_buffers Postgres parameter. Default setting is 25% of total memory. RDS uses 8kB counts for this metric, so {memory} / (4 * 8 * 1024).
    Type: String
    Default: "{DBInstanceClassMemory/32768}"

  #
  # https://aws.amazon.com/blogs/database/best-practices-for-amazon-rds-postgresql-replication/
  #
  WalKeepSize:
    Description: |
      wal_keep_size Postgres 13 parameter, in MB. This parameter determines how much WAL to retain for standby servers. RDS Postgres 13 default is 2048.
    Type: Number
    Default: 2048

  #
  # Advanced - Logging
  #

  LogStatement:
    Description: Sets the type of statements logged.
    AllowedValues:
      - none
      - ddl
      - mod
      - all
    Type: String
    Default: ddl

  LogMinDurationStatement:
    Description: Sets the minimum execution time above which statements will be logged in milliseconds.
    Type: Number
    MinValue: -1
    MaxValue: 2147483647
    Default: 2000

  LogRetentionPeriod:
    Description: Amazon RDS will delete PostgreSQL log that are older than N minutes.
    Type: Number
    MinValue: 1440
    MaxValue: 10080
    Default: 10080

  MaxConnections:
    Description: Sets the maximum number of concurrent connections.
    Type: Number
    MinValue: 6
    MaxValue: 8388607
    Default: 600

  MaxConnectionsAlarmThreshold:
    Description: Sets the alarm threshold for maximum number of concurrent connections.
    Type: Number
    MinValue: 6
    MaxValue: 8388607
    Default: 500

  DeadlockTimeout:
    Description: Sets the time to wait on a lock before checking for deadlock in milliseconds.
    Type: Number
    MinValue: 1
    MaxValue: 2147483647
    Default: 2000

  IdleInTransactionSessionTimeout:
    Description: Sets the maximum allowed duration of any idling transaction in milliseconds.
    Type: Number
    MinValue: 0
    MaxValue: 2147483647
    Default: 900000

  StatementTimeout:
    Description: Sets the maximum allowed duration of any statement in milliseconds.
    Type: Number
    MinValue: 0
    MaxValue: 2147483647
    Default: 60000

  PerformanceInsights:
    Description: If true, performance insights will be enabled for the primary instance and read replicas. Not supported in GovCloud.
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"

  RdsAdminLoggingLevel:
    Description: Sets logging level for logging action taken by the RDS internal user (rds_admin).
    Type: String
    Default: "disabled"
    AllowedValues:
      - "disabled"
      - "debug5"
      - "debug4"
      - "debug3"
      - "debug2"
      - "debug1"
      - "info"
      - "notice"
      - "warning"
      - "error"
      - "log"
      - "fatal"
      - "panic"

  TrackFunction:
    Description: Enables tracking of function call counts and time used. Specify pl to track only procedural-language functions, all to also track SQL and C language functions.
    Type: String
    Default: "none"
    AllowedValues:
      - "none"
      - "pl"
      - "all"

  FoundationLogBucketNameFormat:
    Description: Log Bucket Name Format specified in TEF. YOU SHOULD ONLY CHANGE THIS PARAMETER IF YOU USED A NON-DEFAULT PREFIX IN THE TEF STACK.
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/turbot/enterprise/log_bucket_name_format"

  FoundationDynamicBucketName:
    Description: Suffix, specified in TEF, which will be appended to dynamic bucket name. YOU SHOULD ONLY CHANGE THIS PARAMETER IF YOU USED A NON-DEFAULT PREFIX IN THE TEF STACK.
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/turbot/enterprise/dynamic_bucket_name"

  AuditTrailLogGroupNameFormat:
    Description: Determines the name of the Audit Trail Log Group. Dynamic appends a semi-random string on the audit trail log group name.
    Type: String
    Default: "constant"
    AllowedValues:
      - "constant"
      - "dynamic"

  ProcessLogInHiveBucketRetentionDays:
    Description: Days to retain Turbot Process Logs stored in TED's log bucket.
    Type: Number
    Default: 395

  #
  # Database - Maintenance
  #

  DatabaseMaintenanceWindow:
    Description: >
      Preferred window during which Database maintenance should occur. Please specify in ddd:hh24:mi-ddd:hh24:mi format, example - wed:07:30-wed:08:00. The window must be atleast 30 minutes.
    Type: String
    Default: ""

  #
  # Advanced - Turbot
  #

  ResourceNamePrefix:
    Description: >
      Name of the resource prefix used by the Turbot Database stack, which
      is a prefix for exported outputs from that stack.
    Type: String
    Default: turbot
    AllowedPattern: "^[a-z][a-z0-9]*$"

  ParameterDeploymentTrigger:
    Description: >
      Changes to SSM parameter overrides (e.g. IAM role ARNs) are not automatically detected by CloudFormation.
      Upgrades will recalculate the parameters, but if you wish to refresh you parameters without upgrading you can toggle this parameter.
      Simply changing it is enough to force the parameters to be re-read and recalculated.
    Type: String
    Default: Blue
    AllowedValues:
      - Blue
      - Green

  UseElastiCache:
    Description: Use ElastiCache
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"

  HiveDevelopmentCommands:
    Type: String
    Default: "{}"

Mappings:

  Constants:
    Turbot:
      EntityName: Turbot HQ Inc

    Product:
      Name: Turbot Enterprise Database
      Version: 1.22.0

    Portfolio:
      AccountId: "054892787221"
      GovCloudAccountId: "491412691920"

    RequiredVersion:
      TEF: 1.31.2

Conditions:

  IsGovCloud: !Equals [ !Ref "AWS::Partition", "aws-us-gov"]

  UseElastiCache: !Equals [ !Ref UseElastiCache, "true"]

  UseHiveParamGroup: !Equals [ !Ref HiveRDSParamGroup, "HiveParamGroup"]
  UseHiveParamGroup02: !Equals [ !Ref HiveRDSParamGroup, "HiveParamGroup02"]
  UseHiveParamGroup13: !Equals [ !Ref HiveRDSParamGroup, "HiveParamGroup13"]

  UseFoundationAlphaRegion: !Equals [ !Ref PrimaryRegion, "" ]
  IsFoundationPrimary: !Equals [ !Ref FoundationAlphaRegion, !Ref "AWS::Region" ]
  IsTEDRegionPrimary: !Equals [ !Ref PrimaryRegion, !Ref "AWS::Region" ]

  IsAuditTrailLogGroupDynamic: !Equals [ !Ref AuditTrailLogGroupNameFormat, "dynamic"]
  IsAuditTrailLogGroupConstant: !Equals [ !Ref AuditTrailLogGroupNameFormat, "constant"]

  IsPrimary: !Or
    - !And
      - Condition: IsFoundationPrimary
      - Condition: UseFoundationAlphaRegion
    - !And
      - Condition: IsTEDRegionPrimary
      - !Not
        - Condition: UseFoundationAlphaRegion

  NotPrimary: !Not
    - Condition: IsPrimary

  EnableAutoScalingRDS: !Equals [ !Ref MaxAllocatedStorage, 0 ]
  ReplicaInstanceClassSameAsPrimary: !Equals [ !Ref ReplicaInstanceClass, "Same as Primary DB" ]

  IsMaintenanceWindowBlank: !Equals [ !Ref DatabaseMaintenanceWindow, "" ]

  FailoverInstance: !Equals [ !Ref FailoverInstance, "true" ]
  ReadReplicaInstance: !Equals [ !Ref ReadReplicaInstance, "true" ]
  PrimaryReadReplicaInstance: !And
    - Condition: ReadReplicaInstance
    - Condition: IsPrimary
  NonPrimaryReadReplicaInstance: !And
    - Condition: ReadReplicaInstance
    - !Not
      - Condition: IsPrimary

  PerformanceInsights: !Equals [!Ref PerformanceInsights, "true"]

  AllowMajorVersionUpgrade: !Equals [!Ref AllowMajorVersionUpgrade, "true"]

  DeleteAutomatedBackups: !Equals [!Ref DeleteAutomatedBackups, "true"]
  CopyTagsToSnapshot: !Equals [!Ref CopyTagsToSnapshot, "true"]
  DeletionProtection: !Equals [!Ref DeletionProtection, "true"]

  UseIops: !Equals [!Ref StorageType, "io1"]
  UseIAMAuth: !Equals [!Ref UseIAMAuth, "true"]
  UseCMK: !Equals [!Ref EncryptDatabase, "Hive CMK"]
  UseCMKForRedis: !Equals [ !Ref RedisEncryptionKey, "Hive CMK" ]

  ImportDatabaseSubnetGroup: !Equals [ !Ref DatabaseSubnetGroup, "" ]
  ImportVpcSecurityGroups: !Equals [ !Join ["", !Ref VpcSecurityGroups], "" ]
  ImportAuditTrailRetentionDays: !Equals [ !Ref AuditTrailRetentionDays, "" ]

  IsFoundationLogBucketNameFormatDynamic: !Equals [ !Ref FoundationLogBucketNameFormat, "dynamic" ]

  CreateWeeklyBackup: !Not [ !Equals [ !Ref WeeklyAutomatedBackup, 0 ] ]
  CreateMonthlyBackup: !Not [ !Equals [ !Ref MonthlyAutomatedBackup, 0 ] ]
  CreateDailyBackup: !Not [ !Equals [ !Ref DailyAutomatedBackup, 0 ] ]

  CreateAutomatedBackupPlan: !And
    - !Or
      - !Condition CreateDailyBackup
      - !Condition CreateWeeklyBackup
      - !Condition CreateMonthlyBackup
    - !Condition IsPrimary

  IsBackupVaultNameConstant: !Equals [ !Ref BackupVaultNameFormat, "constant"]

  CreateAutomatedBackupPlanRole: !And
    - !Condition CreateAutomatedBackupPlan
    - !Equals [ !Ref AutomatedBackupPlanRoleArn, ""]

  CreateHiveKey: !Or
    - !Condition UseCMK
    - !Condition CreateAutomatedBackupPlan
    - !Condition UseCMKForRedis

  IsCacheSingleNode: !Equals [ !Ref CacheNumberOfNodes, 1 ]

  CacheNodeOne: !And
    - !Condition UseElastiCache
    - !Or
      - !Condition IsCacheSingleNode
      - !Equals [ !Ref CacheNumberOfNodes, 2 ]
      - !Equals [ !Ref CacheNumberOfNodes, 3 ]
      - !Equals [ !Ref CacheNumberOfNodes, 4 ]
      - !Equals [ !Ref CacheNumberOfNodes, 5 ]
      - !Equals [ !Ref CacheNumberOfNodes, 6 ]
  CacheNodeTwo: !And
    - !Condition UseElastiCache
    - !Or
      - !Equals [ !Ref CacheNumberOfNodes, 2 ]
      - !Equals [ !Ref CacheNumberOfNodes, 3 ]
      - !Equals [ !Ref CacheNumberOfNodes, 4 ]
      - !Equals [ !Ref CacheNumberOfNodes, 5 ]
      - !Equals [ !Ref CacheNumberOfNodes, 6 ]
  CacheNodeThree: !And
    - !Condition UseElastiCache
    - !Or
      - !Equals [ !Ref CacheNumberOfNodes, 3 ]
      - !Equals [ !Ref CacheNumberOfNodes, 4 ]
      - !Equals [ !Ref CacheNumberOfNodes, 5 ]
      - !Equals [ !Ref CacheNumberOfNodes, 6 ]
  CacheNodeFour: !And
    - !Condition UseElastiCache
    - !Or
      - !Equals [ !Ref CacheNumberOfNodes, 4 ]
      - !Equals [ !Ref CacheNumberOfNodes, 5 ]
      - !Equals [ !Ref CacheNumberOfNodes, 6 ]
  CacheNodeFive: !And
    - !Condition UseElastiCache
    - !Or
      - !Equals [ !Ref CacheNumberOfNodes, 5 ]
      - !Equals [ !Ref CacheNumberOfNodes, 6 ]
  CacheNodeSix: !And
    - !Condition UseElastiCache
    - !Equals [ !Ref CacheNumberOfNodes, 6 ]

  EnableMultiAZ: !Equals [ !Ref EnableMultiAZ, true ]

Resources:

  AuditTrailLogGroupDynamic:
    Type: AWS::Logs::LogGroup
    Condition: IsAuditTrailLogGroupDynamic
    DependsOn: HivePreinstallCheck
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub
        - "/${ResourceNamePrefix}/${HiveName}/api/audit-${StackId}"
        - StackId: !Select [0, !Split ["-", !Select [2, !Split ["/", !Ref "AWS::StackId" ]]]]
      RetentionInDays: !If
        - ImportAuditTrailRetentionDays
        - !Ref AuditTrailRetentionDaysValue
        - !Ref AuditTrailRetentionDays

  AuditTrailLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsAuditTrailLogGroupConstant
    DependsOn: HivePreinstallCheck
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub "/${ResourceNamePrefix}/${HiveName}/api/audit"
      RetentionInDays: !If
        - ImportAuditTrailRetentionDays
        - !Ref AuditTrailRetentionDaysValue
        - !Ref AuditTrailRetentionDays

  HiveParamGroup:
    Type: AWS::RDS::DBParameterGroup
    Condition: UseHiveParamGroup
    DependsOn: HivePreinstallCheck
    DeletionPolicy: Retain
    Properties:
      Description: Parameter group for Turbot databases
      Family: !Ref EngineFamily
      Parameters:

        # RECOMMENDATIONS FROM https://pgtune.leopard.in.ua/

        # SSL - Force the use of TLSv1.2 cipher
        ssl: 1
        rds.force_ssl: 1
        # Cannot enforce the ssl_ciphers since AWS does not allow us to modify the parameter as of now.
        # Turbot updates this option when this action is allowed by AWS.
        # ssl_ciphers: "TLSv1.2"

        # Logging
        log_statement: !Ref LogStatement
        log_min_duration_statement: !Ref LogMinDurationStatement
        rds.log_retention_period: !Ref LogRetentionPeriod

        # Limit connections to 200, keep it low to avoid the CPU hit of high
        max_connections: !Ref MaxConnections

        # Set to 25% of total memory. RDS uses 8kB counts for this metric, so {memory} / (4 * 8 * 1024)
        shared_buffers: !Ref SharedBuffer
        # Because we have a larger shared buffer, we need to write to disk earlier so we don't flood IO.
        # https://www.depesz.com/2010/11/03/checkpoint_completion_target/
        checkpoint_completion_target: 0.7
        # A checkpoint is begun every checkpoint_timeout seconds, or if max_wal_size is about to be exceeded,
        # whichever comes first. The default settings are 5 minutes and 1 GB, respectively.
        # https://www.datadoghq.com/blog/aws-rds-postgresql-monitoring/
        checkpoint_timeout: 900
        # 75% of total memory is a aggressive, but reasonable setting 3 / (4 * 8 * 1024) ~= 3 / 30 * 1024 ~= 10240
        effective_cache_size: "{DBInstanceClassMemory/10240}"

        # SSD = relatively low cost disk lookups and high concurrency.
        # https://www.postgresql.org/docs/11/runtime-config-query.html#RUNTIME-CONFIG-QUERY-CONSTANTS
        # https://www.postgresql.org/docs/current/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-ASYNC-BEHAVIOR
        random_page_cost: 1.1
        effective_io_concurrency: 200

        # Query planner default
        default_statistics_target: 100

        # Working memory space for sorting and hash tables.
        # https://www.postgresql.org/docs/11/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-MEMORY
        # 5242kB = 5242 * 1kB (RDS unit)
        work_mem: 5242
        # 2GB = 32GB / 16kB (RDS unit is kB)
        maintenance_work_mem: "GREATEST({DBInstanceClassMemory/16384},65536)"

        # Write ahead logs
        # https://www.postgresql.org/docs/11/wal-configuration.html
        # 1GB (recommended) = 1024 * 1MB (RDS unit)
        min_wal_size: 1024
        # 2GB (recommended) = 2048 * 1MB (RDS unit)
        max_wal_size: 2048
        # 16MB (recommended) = 2048 * 8kB (RDS unit)
        wal_buffers: 2048

        # https://stackoverflow.com/questions/46415242/postgresql-drawbacks-for-large-wal-keep-segments
        # https://www.postgresql.org/message-id/CAGrpgQ_GyX%3D6YB7jc3YgXTbc2fNp8T-H4GTjTuHzkJp1M2tASg%40mail.gmail.com
        #
        wal_keep_segments: 2000

        # Background processes that can be used for cleanup etc
        # https://www.postgresql.org/docs/11/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-ASYNC-BEHAVIOR
        max_worker_processes: 8
        max_parallel_workers: 8
        max_parallel_workers_per_gather: 4

        # Long running select statements on the replicas may be cut short by a
        # vacuum due to a change / delete on the primary. This parameter will
        # reduce that issue.
        # https://www.cybertec-postgresql.com/en/what-hot_standby_feedback-in-postgresql-really-does/
        hot_standby_feedback: 1

        # Timeout
        # Cannot enforce the archive_timeout since AWS does not allow us to modify the parameter as of now.
        # Turbot updates this option when this action is allowed by AWS.
        # https://www.opsdash.com/blog/postgresql-wal-archiving-backup.html
        # archive_timeout: 300

        # Maximum time to complete client authentication, in seconds. The default is one minute (1m)
        # https://postgresqlco.nf/en/doc/param/authentication_timeout.
        authentication_timeout: 60

        # This is the amount of time, to wait on a lock before checking to see if there is a deadlock condition.
        # https://www.postgresql.org/docs/current/runtime-config-locks.html
        deadlock_timeout: !Ref DeadlockTimeout

        # Terminate any session with an open transaction that has been idle for longer than the specified
        # duration in milliseconds. The default value of 0 disables this feature.
        # https://www.postgresql.org/docs/11/runtime-config-client.html
        idle_in_transaction_session_timeout: !Ref IdleInTransactionSessionTimeout
        # Abort any statement that takes more than the specified number of milliseconds,
        # starting from the time the command arrives at the server from the client.
        # https://www.postgresql.org/docs/11/runtime-config-client.html
        statement_timeout: !Ref StatementTimeout

        # This lets you log actions by the RDS internal user (rds_admin) in the your databases on the DB instance,
        # and writes the output to the Postgres error log.
        # https://aws.amazon.com/blogs/database/working-with-rds-and-aurora-postgresql-logs-part-1/
        rds.force_admin_logging_level: !Ref RdsAdminLoggingLevel

        # Enables tracking of function call counts and time used. Specify pl to track only procedural-language functions,
        # all to also track SQL and C language functions. The default is none, which disables function statistics tracking.
        # https://www.postgresql.org/docs/9.6/runtime-config-statistics.html
        track_functions: !Ref TrackFunction

      Tags:
        - Key: Vendor
          Value: !FindInMap [Constants, Turbot, EntityName]
        - Key: Product
          Value: !FindInMap [Constants, Product, Name]
        - Key: Hive
          Value: !Ref HiveName
        - Key: Name
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}_param_group" ] ]

  HiveParamGroup02:
    Type: AWS::RDS::DBParameterGroup
    Condition: UseHiveParamGroup02
    DependsOn: HivePreinstallCheck
    DeletionPolicy: Retain
    Properties:
      Description: RDS Parameter group for Turbot databases
      Family: !Ref EngineFamily
      Parameters:

        # RECOMMENDATIONS FROM https://pgtune.leopard.in.ua/

        # SSL - Force the use of TLSv1.2 cipher
        ssl: 1
        rds.force_ssl: 1
        # Cannot enforce the ssl_ciphers since AWS does not allow us to modify the parameter as of now.
        # Turbot updates this option when this action is allowed by AWS.
        # ssl_ciphers: "TLSv1.2"

        # Logging
        log_statement: !Ref LogStatement
        log_min_duration_statement: !Ref LogMinDurationStatement
        rds.log_retention_period: !Ref LogRetentionPeriod

        # Limit connections to 200, keep it low to avoid the CPU hit of high
        max_connections: !Ref MaxConnections

        # Set to 25% of total memory. RDS uses 8kB counts for this metric, so {memory} / (4 * 8 * 1024)
        shared_buffers: !Ref SharedBuffer
        # Because we have a larger shared buffer, we need to write to disk earlier so we don't flood IO.
        # https://www.depesz.com/2010/11/03/checkpoint_completion_target/
        checkpoint_completion_target: 0.7
        # A checkpoint is begun every checkpoint_timeout seconds, or if max_wal_size is about to be exceeded,
        # whichever comes first. The default settings are 5 minutes and 1 GB, respectively.
        # https://www.datadoghq.com/blog/aws-rds-postgresql-monitoring/
        checkpoint_timeout: 900
        # 75% of total memory is a aggressive, but reasonable setting 3 / (4 * 8 * 1024) ~= 3 / 30 * 1024 ~= 10240
        effective_cache_size: "{DBInstanceClassMemory/10240}"

        # SSD = relatively low cost disk lookups and high concurrency.
        # https://www.postgresql.org/docs/11/runtime-config-query.html#RUNTIME-CONFIG-QUERY-CONSTANTS
        # https://www.postgresql.org/docs/current/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-ASYNC-BEHAVIOR
        random_page_cost: 1.1
        effective_io_concurrency: 200

        # Query planner default
        default_statistics_target: 100

        # Working memory space for sorting and hash tables.
        # https://www.postgresql.org/docs/11/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-MEMORY
        # 5242kB = 5242 * 1kB (RDS unit)
        work_mem: 5242
        # 2GB = 32GB / 16kB (RDS unit is kB)
        maintenance_work_mem: "GREATEST({DBInstanceClassMemory/16384},65536)"

        # Write ahead logs
        # https://www.postgresql.org/docs/11/wal-configuration.html
        # 1GB (recommended) = 1024 * 1MB (RDS unit)
        min_wal_size: 1024
        # 2GB (recommended) = 2048 * 1MB (RDS unit)
        max_wal_size: 2048
        # 16MB (recommended) = 2048 * 8kB (RDS unit)
        wal_buffers: 2048

        # https://stackoverflow.com/questions/46415242/postgresql-drawbacks-for-large-wal-keep-segments
        # https://www.postgresql.org/message-id/CAGrpgQ_GyX%3D6YB7jc3YgXTbc2fNp8T-H4GTjTuHzkJp1M2tASg%40mail.gmail.com
        #
        wal_keep_segments: 2000

        # Background processes that can be used for cleanup etc
        # https://www.postgresql.org/docs/11/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-ASYNC-BEHAVIOR
        max_worker_processes: 8
        max_parallel_workers: 8
        max_parallel_workers_per_gather: 4

        # Long running select statements on the replicas may be cut short by a
        # vacuum due to a change / delete on the primary. This parameter will
        # reduce that issue.
        # https://www.cybertec-postgresql.com/en/what-hot_standby_feedback-in-postgresql-really-does/
        hot_standby_feedback: 1

        # Timeout
        # Cannot enforce the archive_timeout since AWS does not allow us to modify the parameter as of now.
        # Turbot updates this option when this action is allowed by AWS.
        # https://www.opsdash.com/blog/postgresql-wal-archiving-backup.html
        # archive_timeout: 300

        # Maximum time to complete client authentication, in seconds. The default is one minute (1m)
        # https://postgresqlco.nf/en/doc/param/authentication_timeout.
        authentication_timeout: 60

        # This is the amount of time, to wait on a lock before checking to see if there is a deadlock condition.
        # https://www.postgresql.org/docs/current/runtime-config-locks.html
        deadlock_timeout: !Ref DeadlockTimeout

        # Terminate any session with an open transaction that has been idle for longer than the specified
        # duration in milliseconds. The default value of 0 disables this feature.
        # https://www.postgresql.org/docs/11/runtime-config-client.html
        idle_in_transaction_session_timeout: !Ref IdleInTransactionSessionTimeout
        # Abort any statement that takes more than the specified number of milliseconds,
        # starting from the time the command arrives at the server from the client.
        # https://www.postgresql.org/docs/11/runtime-config-client.html
        statement_timeout: !Ref StatementTimeout

        # This lets you log actions by the RDS internal user (rds_admin) in the your databases on the DB instance,
        # and writes the output to the Postgres error log.
        # https://aws.amazon.com/blogs/database/working-with-rds-and-aurora-postgresql-logs-part-1/
        rds.force_admin_logging_level: !Ref RdsAdminLoggingLevel

        # Enables tracking of function call counts and time used. Specify pl to track only procedural-language functions,
        # all to also track SQL and C language functions. The default is none, which disables function statistics tracking.
        # https://www.postgresql.org/docs/9.6/runtime-config-statistics.html
        track_functions: !Ref TrackFunction

      Tags:
        - Key: Vendor
          Value: !FindInMap [Constants, Turbot, EntityName]
        - Key: Product
          Value: !FindInMap [Constants, Product, Name]
        - Key: Hive
          Value: !Ref HiveName
        - Key: Name
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}_param_group_02" ] ]

  HiveParamGroup13:
    Type: AWS::RDS::DBParameterGroup
    Condition: UseHiveParamGroup13
    DependsOn: HivePreinstallCheck
    DeletionPolicy: Retain
    Properties:
      Description: RDS Parameter group for Turbot databases
      Family: !Ref EngineFamily
      Parameters:

        # RECOMMENDATIONS FROM https://pgtune.leopard.in.ua/

        # SSL - Force the use of TLSv1.2 cipher
        ssl: 1
        rds.force_ssl: 1
        # Cannot enforce the ssl_ciphers since AWS does not allow us to modify the parameter as of now.
        # Turbot updates this option when this action is allowed by AWS.
        # ssl_ciphers: "TLSv1.2"

        # Logging
        log_statement: !Ref LogStatement
        log_min_duration_statement: !Ref LogMinDurationStatement
        rds.log_retention_period: !Ref LogRetentionPeriod

        # Limit connections to 200, keep it low to avoid the CPU hit of high
        max_connections: !Ref MaxConnections

        # Set to 25% of total memory. RDS uses 8kB counts for this metric, so {memory} / (4 * 8 * 1024)
        shared_buffers: !Ref SharedBuffer
        # Because we have a larger shared buffer, we need to write to disk earlier so we don't flood IO.
        # https://www.depesz.com/2010/11/03/checkpoint_completion_target/
        checkpoint_completion_target: 0.7
        # A checkpoint is begun every checkpoint_timeout seconds, or if max_wal_size is about to be exceeded,
        # whichever comes first. The default settings are 5 minutes and 1 GB, respectively.
        # https://www.datadoghq.com/blog/aws-rds-postgresql-monitoring/
        checkpoint_timeout: 900
        # 75% of total memory is a aggressive, but reasonable setting 3 / (4 * 8 * 1024) ~= 3 / 30 * 1024 ~= 10240
        effective_cache_size: "{DBInstanceClassMemory/10240}"

        # SSD = relatively low cost disk lookups and high concurrency.
        # https://www.postgresql.org/docs/11/runtime-config-query.html#RUNTIME-CONFIG-QUERY-CONSTANTS
        # https://www.postgresql.org/docs/current/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-ASYNC-BEHAVIOR
        random_page_cost: 1.1
        effective_io_concurrency: 200

        # Query planner default
        default_statistics_target: 100

        # Working memory space for sorting and hash tables.
        # https://www.postgresql.org/docs/11/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-MEMORY
        # 5242kB = 5242 * 1kB (RDS unit)
        work_mem: 5242
        # 2GB = 32GB / 16kB (RDS unit is kB)
        maintenance_work_mem: "GREATEST({DBInstanceClassMemory/16384},65536)"

        # Write ahead logs
        # https://www.postgresql.org/docs/11/wal-configuration.html
        # 1GB (recommended) = 1024 * 1MB (RDS unit)
        min_wal_size: 1024
        # 2GB (recommended) = 2048 * 1MB (RDS unit)
        max_wal_size: 2048
        # 16MB (recommended) = 2048 * 8kB (RDS unit)
        wal_buffers: 2048

        # https://stackoverflow.com/questions/46415242/postgresql-drawbacks-for-large-wal-keep-segments
        # https://www.postgresql.org/message-id/CAGrpgQ_GyX%3D6YB7jc3YgXTbc2fNp8T-H4GTjTuHzkJp1M2tASg%40mail.gmail.com
        # https://blog.dbi-services.com/postgresql-13-and-patroni-2-0-when-parameters-change/
        wal_keep_size: !Ref WalKeepSize

        # Background processes that can be used for cleanup etc
        # https://www.postgresql.org/docs/11/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-ASYNC-BEHAVIOR
        max_worker_processes: 8
        max_parallel_workers: 8
        max_parallel_workers_per_gather: 4

        # Long running select statements on the replicas may be cut short by a
        # vacuum due to a change / delete on the primary. This parameter will
        # reduce that issue.
        # https://www.cybertec-postgresql.com/en/what-hot_standby_feedback-in-postgresql-really-does/
        hot_standby_feedback: 1

        # Timeout
        # Cannot enforce the archive_timeout since AWS does not allow us to modify the parameter as of now.
        # Turbot updates this option when this action is allowed by AWS.
        # https://www.opsdash.com/blog/postgresql-wal-archiving-backup.html
        # archive_timeout: 300

        # Maximum time to complete client authentication, in seconds. The default is one minute (1m)
        # https://postgresqlco.nf/en/doc/param/authentication_timeout.
        authentication_timeout: 60

        # This is the amount of time, to wait on a lock before checking to see if there is a deadlock condition.
        # https://www.postgresql.org/docs/current/runtime-config-locks.html
        deadlock_timeout: !Ref DeadlockTimeout

        # Terminate any session with an open transaction that has been idle for longer than the specified
        # duration in milliseconds. The default value of 0 disables this feature.
        # https://www.postgresql.org/docs/11/runtime-config-client.html
        idle_in_transaction_session_timeout: !Ref IdleInTransactionSessionTimeout
        # Abort any statement that takes more than the specified number of milliseconds,
        # starting from the time the command arrives at the server from the client.
        # https://www.postgresql.org/docs/11/runtime-config-client.html
        statement_timeout: !Ref StatementTimeout

        # This lets you log actions by the RDS internal user (rds_admin) in the your databases on the DB instance,
        # and writes the output to the Postgres error log.
        # https://aws.amazon.com/blogs/database/working-with-rds-and-aurora-postgresql-logs-part-1/
        rds.force_admin_logging_level: !Ref RdsAdminLoggingLevel

        # Enables tracking of function call counts and time used. Specify pl to track only procedural-language functions,
        # all to also track SQL and C language functions. The default is none, which disables function statistics tracking.
        # https://www.postgresql.org/docs/9.6/runtime-config-statistics.html
        track_functions: !Ref TrackFunction

      Tags:
        - Key: Vendor
          Value: !FindInMap [Constants, Turbot, EntityName]
        - Key: Product
          Value: !FindInMap [Constants, Product, Name]
        - Key: Hive
          Value: !Ref HiveName
        - Key: Name
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}_param_group_13" ] ]

  HiveKey:
    Type: AWS::KMS::Key
    Condition: CreateHiveKey
    DependsOn: HivePreinstallCheck
    DeletionPolicy: Delete
    Properties:
      Description: Turbot Hive Data Encryption
      EnableKeyRotation: true
      PendingWindowInDays: 30
      KeyPolicy:
        Version: 2012-10-17
        Id: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join ['', [!Sub 'arn:${AWS::Partition}:iam::', !Ref 'AWS::AccountId', ':root']]
            Action: "kms:*"
            Resource: "*"
      Tags:
        - Key: Vendor
          Value: !FindInMap [Constants, Turbot, EntityName]
        - Key: Product
          Value: !FindInMap [Constants, Product, Name]
        - Key: Hive
          Value: !Ref HiveName
        - Key: HiveRole
          Value: !If [IsPrimary, "Primary Region", "Replica Region"]
        - Key: Name
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]

  HiveKeyAlias:
    Type: AWS::KMS::Alias
    DependsOn: HivePreinstallCheck
    Condition: CreateHiveKey
    Properties:
      AliasName: !Sub "alias/${ResourceNamePrefix}_${HiveName}"
      TargetKeyId: !Ref HiveKey

  HivePrimary:
    Type: AWS::RDS::DBInstance
    Condition: IsPrimary
    DependsOn: HivePreinstallCheck
    DeletionPolicy: Retain
    Properties:
      PreferredMaintenanceWindow: !If
        - IsMaintenanceWindowBlank
        - !Ref AWS::NoValue
        - !Ref DatabaseMaintenanceWindow
      DBInstanceIdentifier: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
      DBInstanceClass: !Ref InstanceClass
      AllocatedStorage: !Ref AllocatedStorage
      MaxAllocatedStorage: !If
        - EnableAutoScalingRDS
        - !Ref AWS::NoValue
        - !Ref MaxAllocatedStorage

      DBParameterGroupName: !If
        - UseHiveParamGroup
        - !Ref HiveParamGroup
        - !If
          - UseHiveParamGroup13
          - !Ref HiveParamGroup13
          - !Ref HiveParamGroup02

      DBSubnetGroupName: !If
        - ImportDatabaseSubnetGroup
        - !Ref DatabaseSubnetGroupValue
        - !Ref DatabaseSubnetGroup

      MultiAZ: !If [FailoverInstance, true, false]

      # We set this as a constant, no reason anyone should be changing it
      DBName: turbot

      # Documentation not updated, but this is working
      # https://github.com/aws-cloudformation/aws-cloudformation-coverage-roadmap/issues/211
      CACertificateIdentifier: !If
        - IsGovCloud
        - rds-ca-2017
        - rds-ca-2019

      Engine: !Ref Engine
      EngineVersion: !Ref EngineVersion
      AllowMajorVersionUpgrade: !If [AllowMajorVersionUpgrade, true, false]
      AutoMinorVersionUpgrade: false

      StorageType: !Ref StorageType
      Iops: !If [UseIops, !Ref AllocatedIops, !Ref "AWS::NoValue"]

      StorageEncrypted: true
      KmsKeyId: !If [UseCMK, !Ref HiveKey, !Ref "AWS::NoValue"]

      DeletionProtection: !If [DeletionProtection, true, false]

      EnablePerformanceInsights: !If [PerformanceInsights, true, false]
      PerformanceInsightsRetentionPeriod: !If [ PerformanceInsights, 7, !Ref "AWS::NoValue" ]
      PerformanceInsightsKMSKeyId: !If
        - PerformanceInsights
        - !If [ UseCMK, !Ref HiveKey, !Ref "AWS::NoValue" ]
        - !Ref "AWS::NoValue"

      MasterUsername: !Ref MasterUsername
      MasterUserPassword: p0stgr3s
      EnableIAMDatabaseAuthentication: !If [UseIAMAuth, true, false]

      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      CopyTagsToSnapshot: !If [CopyTagsToSnapshot, true, false]
      DeleteAutomatedBackups: !If [DeleteAutomatedBackups, true, false]

      VPCSecurityGroups: !If
        - ImportVpcSecurityGroups
        - !Split [ ",", !Ref VpcSecurityGroupsValue ]
        - !Ref VpcSecurityGroups


      # Always false, just to be safe
      PubliclyAccessible: false

      Tags:
        - Key: Vendor
          Value: !FindInMap [Constants, Turbot, EntityName]
        - Key: Product
          Value: !FindInMap [Constants, Product, Name]
        - Key: Hive
          Value: !Ref HiveName
        - Key: HiveRole
          Value: Primary


  # Create a read replica in the primary region. This DependsOn availability
  # of the HivePrimary instance. It is a separate to the HiveReadReplica in
  # other (non-primary) regions due to CFN limitations around DependsOn
  # refering to the HivePrimary resource which is created per a Condition.
  HivePrimaryReadReplica:
    Type: AWS::RDS::DBInstance
    Condition: PrimaryReadReplicaInstance
    DependsOn: HivePrimary
    Properties:

      # In the primary region, we need a different name for the read replica. In other
      # regions we name the read replica to match the primary, which (may)
      # make promotion easier in the case of regional failover.
      DBInstanceIdentifier: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}_read_replica" ] ]
      PreferredMaintenanceWindow: !If
        - IsMaintenanceWindowBlank
        - !Ref AWS::NoValue
        - !Ref DatabaseMaintenanceWindow
      DBInstanceClass: !If
        - ReplicaInstanceClassSameAsPrimary
        - !Ref InstanceClass
        - !Ref ReplicaInstanceClass

      MaxAllocatedStorage: !If
        - EnableAutoScalingRDS
        - !Ref AWS::NoValue
        - !Ref MaxAllocatedStorage

      CACertificateIdentifier: !If
        - IsGovCloud
        - rds-ca-2017
        - rds-ca-2019

      # Cross-region replication requires the ARN of the primary instance. We can
      # construct that here to make parameter inputs simpler.
      SourceRegion: !If
        - IsPrimary
        - !Ref FoundationAlphaRegion
        - !Ref PrimaryRegion
      SourceDBInstanceIdentifier: !Join
        - ":"
        -
          - !Sub "arn:${AWS::Partition}:rds"
          - !If
            - IsPrimary
            - !Ref FoundationAlphaRegion
            - !Ref PrimaryRegion
          - !Ref "AWS::AccountId"
          - db
          - !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]

      # Replicas need to be placed into an equivalent parameter group.
      DBParameterGroupName: !If
        - UseHiveParamGroup
        - !Ref HiveParamGroup
        - !If
          - UseHiveParamGroup13
          - !Ref HiveParamGroup13
          - !Ref HiveParamGroup02

      # Replicas use the Turbot DB subnet group
      DBSubnetGroupName: !If
        - ImportDatabaseSubnetGroup
        - !Ref DatabaseSubnetGroupValue
        - !Ref DatabaseSubnetGroup

      # Storage is always encrypted. A hive key is used if available, otherwise
      # fall back to the standard aws/rds encryption.
      StorageEncrypted: true
      KmsKeyId: !If [UseCMK, !Ref HiveKey, !Ref "AWS::NoValue"]

      # Match the storage model of the primary instance
      StorageType: !Ref StorageType
      Iops: !If [UseIops, !Ref AllocatedIops, !Ref "AWS::NoValue"]

      EnablePerformanceInsights: !If [PerformanceInsights, true, false]
      PerformanceInsightsRetentionPeriod: !If [ PerformanceInsights, 7, !Ref "AWS::NoValue" ]
      PerformanceInsightsKMSKeyId: !If
        - PerformanceInsights
        - !If [ UseCMK, !Ref HiveKey, !Ref "AWS::NoValue" ]
        - !Ref "AWS::NoValue"

      EnableIAMDatabaseAuthentication: !If [UseIAMAuth, true, false]

      # General configuration
      VPCSecurityGroups: !If
        - ImportVpcSecurityGroups
        - !Split [ ",", !Ref VpcSecurityGroupsValue ]
        - !Ref VpcSecurityGroups
      DeletionProtection: !If [DeletionProtection, true, false]
      PubliclyAccessible: false

      EngineVersion: !Ref ReadReplicaEngineVersion
      AllowMajorVersionUpgrade: !If [AllowMajorVersionUpgrade, true, false]
      AutoMinorVersionUpgrade: false

      Tags:
        - Key: Vendor
          Value: !FindInMap [Constants, Turbot, EntityName]
        - Key: Product
          Value: !FindInMap [Constants, Product, Name]
        - Key: Hive
          Value: !Ref HiveName
        - Key: HiveRole
          Value: Read Replica


  # Create a read replica in a non-primary region. This is separate to the HivePrimaryReadReplica
  # due to CFN limitations.
  HiveReadReplica:
    Type: AWS::RDS::DBInstance
    DependsOn: HivePreinstallCheck
    Condition: NonPrimaryReadReplicaInstance
    Properties:

      # In the primary region, we need a different name for the read replica. In other
      # regions we name the read replica to match the primary, which (may)
      # make promotion easier in the case of regional failover.
      DBInstanceIdentifier: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
      PreferredMaintenanceWindow: !If
        - IsMaintenanceWindowBlank
        - !Ref AWS::NoValue
        - !Ref DatabaseMaintenanceWindow
      DBInstanceClass: !If
        - ReplicaInstanceClassSameAsPrimary
        - !Ref InstanceClass
        - !Ref ReplicaInstanceClass

      MaxAllocatedStorage: !If
        - EnableAutoScalingRDS
        - !Ref AWS::NoValue
        - !Ref MaxAllocatedStorage

      CACertificateIdentifier: !If
        - IsGovCloud
        - rds-ca-2017
        - rds-ca-2019

      # Cross-region replication requires the ARN of the primary instance. We can
      # construct that here to make parameter inputs simpler.
      SourceRegion: !If
        - IsPrimary
        - !Ref FoundationAlphaRegion
        - !Ref PrimaryRegion
      SourceDBInstanceIdentifier: !Join
        - ":"
        -
          - !Sub "arn:${AWS::Partition}:rds"
          - !If
            - IsPrimary
            - !Ref FoundationAlphaRegion
            - !Ref PrimaryRegion
          - !Ref "AWS::AccountId"
          - db
          - !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]

      # Replicas need to be placed into an equivalent parameter group.
      DBParameterGroupName: !If
        - UseHiveParamGroup
        - !Ref HiveParamGroup
        - !If
          - UseHiveParamGroup13
          - !Ref HiveParamGroup13
          - !Ref HiveParamGroup02

      # Replicas use the Turbot DB subnet group
      DBSubnetGroupName: !If
        - ImportDatabaseSubnetGroup
        - !Ref DatabaseSubnetGroupValue
        - !Ref DatabaseSubnetGroup

      # Storage is always encrypted. A hive key is used if available, otherwise
      # fall back to the standard aws/rds encryption.
      StorageEncrypted: true
      KmsKeyId: !If [UseCMK, !Ref HiveKey, !Ref "AWS::NoValue"]

      # Match the storage model of the primary instance
      StorageType: !Ref StorageType
      Iops: !If [UseIops, !Ref AllocatedIops, !Ref "AWS::NoValue"]

      EnablePerformanceInsights: !If [PerformanceInsights, true, false]
      PerformanceInsightsRetentionPeriod: !If [ PerformanceInsights, 7, !Ref "AWS::NoValue" ]
      PerformanceInsightsKMSKeyId: !If
        - PerformanceInsights
        - !If [ UseCMK, !Ref HiveKey, !Ref "AWS::NoValue" ]
        - !Ref "AWS::NoValue"

      EnableIAMDatabaseAuthentication: !If [UseIAMAuth, true, false]

      # General configuration
      VPCSecurityGroups: !If
        - ImportVpcSecurityGroups
        - !Split [ ",", !Ref VpcSecurityGroupsValue ]
        - !Ref VpcSecurityGroups
      DeletionProtection: !If [DeletionProtection, true, false]
      PubliclyAccessible: false

      EngineVersion: !Ref ReadReplicaEngineVersion
      AllowMajorVersionUpgrade: !If [AllowMajorVersionUpgrade, true, false]
      AutoMinorVersionUpgrade: false

      Tags:
        - Key: Vendor
          Value: !FindInMap [Constants, Turbot, EntityName]
        - Key: Product
          Value: !FindInMap [Constants, Product, Name]
        - Key: Hive
          Value: !Ref HiveName
        - Key: HiveRole
          Value: Read Replica

  HiveBucket:
    Type: AWS::S3::Bucket
    DependsOn: HivePreinstallCheck
    DeletionPolicy: Retain
    Properties:
      BucketName: !If
        - IsFoundationLogBucketNameFormatDynamic
        - !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${AWS::AccountId}_${HiveName}_${AWS::Region}_${FoundationDynamicBucketName}" ] ]
        - !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${AWS::AccountId}_${HiveName}_${AWS::Region}" ] ]
      VersioningConfiguration:
        Status: Enabled
      # Block public access
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault: !If
              - UseCMK
              - SSEAlgorithm: aws:kms
                KMSMasterKeyID: !Ref HiveKey
              - SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: !Sub "Debug Logs (/process/debug/*) will expire after 30 days."
            Status: "Enabled"
            Prefix: "process/debug/"
            ExpirationInDays: 30
            NoncurrentVersionExpirationInDays: 1
          - Id: !Sub "Logs will be deleted after ${ProcessLogInHiveBucketRetentionDays} days."
            Status: "Enabled"
            ExpirationInDays: !Ref ProcessLogInHiveBucketRetentionDays
            NoncurrentVersionExpirationInDays: 1

  #
  # SSM
  #

  HiveVersionParameter:
    Type: AWS::SSM::Parameter
    DependsOn: HivePreinstallCheck
    Properties:
      Name: !Sub "/${ResourceNamePrefix}/hive/${HiveName}/ted_version"
      Description: "TED version"
      Type: String
      Value: !FindInMap [Constants, Product, Version]

  HiveParameter:
    Type: AWS::SSM::Parameter
    DependsOn: HivePreinstallCheck
    Properties:
      Name: !Sub "/${ResourceNamePrefix}/hive/${HiveName}"
      Description: !Sub "Hive parameters for ${HiveName}"
      Type: String
      Value: !Join
        - ""
        -
          # DB - Base & Primary
          - !Sub
            - |
              {
                "name": "${HiveName}",
                "id": "${HiveName}",
                "stackId": "${StackId}",
                "redisHost": "${RedisHost}",
                "redisPort": "${RedisPort}",
                "db": {
                  "base": {
                    "user": "turbot",
                    "masterUser": "${MasterUsername}",
                    "host": "${DatabasePrimaryEndpoint}",
                    "port": 5432,
                    "region": "${PrimaryRegion}",
                    "idleTimeoutMillis": 75000
                  },
                  "primary": { "${PrimaryRegion}": {} },
                  "replica": {
            - HiveName: !Ref HiveName
              StackId: !If
                - IsAuditTrailLogGroupDynamic
                - !Select [0, !Split ["-", !Select [2, !Split ["/", !Ref "AWS::StackId"]]]]
                - ""
              MasterUsername: !Ref MasterUsername
              PrimaryRegion: !If
                - IsPrimary
                - !Ref FoundationAlphaRegion
                - !Ref PrimaryRegion
              DatabasePrimaryEndpoint: !If
                - IsPrimary
                - !GetAtt HivePrimary.Endpoint.Address
                - !Ref DatabasePrimaryEndpoint
              RedisHost: !If
                - UseElastiCache
                - !GetAtt CacheCluster.PrimaryEndPoint.Address
                - ""
              RedisPort: !If
                - UseElastiCache
                - !GetAtt CacheCluster.PrimaryEndPoint.Port
                - ""

          # DB - Primary Read Replica
          - !If
            - PrimaryReadReplicaInstance
            - !Sub
              - |
                "${Region}": {
                  "host": "${Endpoint}",
                  "region": "${Region}"
                }
              - Endpoint: !GetAtt HivePrimaryReadReplica.Endpoint.Address
                Region: !If
                  - IsPrimary
                  - !Ref FoundationAlphaRegion
                  - !Ref PrimaryRegion
            - ""

          # DB - Non-primary read replica
          - !If
            - NonPrimaryReadReplicaInstance
            - !Sub
              - |
                "${Region}": {
                  "host": "${Endpoint}",
                  "region": "${Region}"
                }
              - Endpoint: !GetAtt HiveReadReplica.Endpoint.Address
                Region: !Ref "AWS::Region"
            - ""

          # Footer
          - "} } }"


  # Configure internals of the hive database, making it ready for use by Turbot workspaces.
  Hive:
    Type: Custom::CustomResource
    Condition: IsPrimary
    DependsOn:
      # HiveParameter is quick to create while HivePrimary takes ages, technically it should be ok not depending to the
      # HiveParameter. Unfortunately we can't guarantee the order of CFN resource creation, we've observed that the
      # HiveParameter is created at the same time with this Hive resource.
      - HivePrimary
      - HiveParameter
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${ResourceNamePrefix}_hive_manager"
      Hive: !Ref HiveName
      # This section is not normally required
      Options:
        FoundationStackOutputPrefix: !Ref ResourceNamePrefix
        UsedCMK: !Ref EncryptDatabase
        MasterPassword: !Ref MasterPassword
        # Some database schema changes require the hive manager to be re-run. For example, if a new postgres
        # extension is added. This is only required when the postgres change MUST be run by the master user
        # (and cannot be applied by our standard turbot user).
        # In these cases, the sequence is:
        #  1. The schema change is added in the hive manager, which is defined in TEF (so TEF needs to be upgraded).
        #  2. The hive manager lambda needs to be run for each hive (so TED needs to be upgraded, and hive manager prompted to run via this parameter change).
        #  3. The workspace upgrade runs as normal (via a workspace upgrade), since the database is already prepared in #2.
        # So, if a database schema change happens, TED should be republished with this version updated.
        SchemaVersion: 5.24.1
        ReplicationGroupId: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster" ] ]
        HiveDevelopmentCommands: !Ref HiveDevelopmentCommands
        # Introduce dependency here so it only runs after ElastiCache has been created
        ElastiCacheAddress: !If
          - UseElastiCache
          - !Ref CacheCluster
          - !Ref "AWS::NoValue"

  # Manage ElastiCache cluster not the primary database
  HiveReplicaManager:
    Type: Custom::CustomResource
    Condition: NotPrimary
    DependsOn: HivePreinstallCheck
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${ResourceNamePrefix}_hive_manager"
      Hive: !Ref HiveName
      # This section is not normally required
      Options:
        Type: replica
        FoundationStackOutputPrefix: !Ref ResourceNamePrefix
        ReplicationGroupId: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster" ] ]
        HiveDevelopmentCommands: !Ref HiveDevelopmentCommands
        # Introduce dependency here so it only runs after ElastiCache has been created
        ElastiCacheAddress: !If
          - UseElastiCache
          - !Ref CacheCluster
          - !Ref "AWS::NoValue"

  #
  # AWS Backup
  #

  HiveBackupPlan:
    Type: AWS::Backup::BackupPlan
    Condition: CreateAutomatedBackupPlan
    Properties:
      BackupPlan:
        BackupPlanName: !Sub "${ResourceNamePrefix}_${HiveName}_backup_plan"
        BackupPlanRule:
          - !If
            - CreateDailyBackup
            - Lifecycle:
                DeleteAfterDays: !Ref DailyAutomatedBackup
              RuleName: "daily_backup_plan"
              ScheduleExpression: "cron(0 5 ? * * *)"
              TargetBackupVault: !Ref HiveBackupVault
            - !Ref "AWS::NoValue"
          - !If
            - CreateWeeklyBackup
            - Lifecycle:
                DeleteAfterDays: !Ref WeeklyAutomatedBackup
              RuleName: "weekly_backup_plan"
              ScheduleExpression: "cron(0 5 ? * 7 *)"
              TargetBackupVault: !Ref HiveBackupVault
            - !Ref "AWS::NoValue"
          - !If
            - CreateMonthlyBackup
            - Lifecycle:
                DeleteAfterDays: !Ref MonthlyAutomatedBackup
              RuleName: "monthly_backup_plan"
              ScheduleExpression: "cron(0 5 1 * ? *)"
              TargetBackupVault: !Ref HiveBackupVault
            - !Ref "AWS::NoValue"

  HiveBackupVault:
    Type: AWS::Backup::BackupVault
    Condition: CreateAutomatedBackupPlan
    DeletionPolicy: Retain
    Properties:
      BackupVaultName: !If
        - IsBackupVaultNameConstant
        - !Sub "${ResourceNamePrefix}_${HiveName}_backup_vault"
        - !Sub
          - "${ResourceNamePrefix}_${HiveName}_backup_vault_${StackId}"
          - StackId: !Select [0, !Split ["-", !Select [2, !Split ["/", !Ref "AWS::StackId" ]]]]

  HiveBackupSelection:
    Type: AWS::Backup::BackupSelection
    Condition: CreateAutomatedBackupPlan
    Properties:
      BackupPlanId: !Ref HiveBackupPlan
      BackupSelection:
        IamRoleArn: !If
          - CreateAutomatedBackupPlanRole
          - !GetAtt HiveBackupRole.Arn
          - !Ref AutomatedBackupPlanRoleArn
        Resources:
          - !Sub
            - "arn:${AWS::Partition}:rds:${AWS::Region}:${AWS::AccountId}:db:${DbName}"
            - DbName: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
        SelectionName: !Sub "${ResourceNamePrefix}_${HiveName}_backup_selection_name"

  HiveBackupRole:
    Type: AWS::IAM::Role
    Condition: CreateAutomatedBackupPlanRole
    Properties:
      RoleName: !Sub
        - "${ResourceNamePrefix}_${HiveName}_AWSBackup_plan_${Region}"
        - Region: !Join [ "_", !Split [ "-", !Ref "AWS::Region" ] ]
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - backup.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: BackupPlan
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                - rds:AddTagsToResource
                - rds:ListTagsForResource
                - rds:DescribeDBSnapshots
                - rds:CreateDBSnapshot
                - rds:CopyDBSnapshot
                - rds:DescribeDBInstances
                Resource:
                - !Sub "arn:${AWS::Partition}:rds:${AWS::Region}:${AWS::AccountId}:snapshot:awsbackup:*"
                - !Sub
                  - "arn:${AWS::Partition}:rds:${AWS::Region}:${AWS::AccountId}:db:${DbName}"
                  - DbName: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
                - !Sub
                  - "arn:${AWS::Partition}:rds:${AWS::Region}:${AWS::AccountId}:snapshot:rds:${DbName}-*"
                  - DbName: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
              - Effect: Allow
                Action:
                - rds:DeleteDBSnapshot
                - rds:ModifyDBSnapshotAttribute
                Resource: !Sub "arn:${AWS::Partition}:rds:${AWS::Region}:${AWS::AccountId}:snapshot:awsbackup:*"
              - Effect: Allow
                Action:
                - backup:DescribeBackupVault
                - backup:CopyIntoBackupVault
                Resource: !Sub "arn:${AWS::Partition}:backup:${AWS::Region}:${AWS::AccountId}:backup-vault:*"
              - Effect: Allow
                Action:
                - backup:CopyFromBackupVault
                Resource: !Sub "arn:${AWS::Partition}:backup:${AWS::Region}:${AWS::AccountId}:backup-vault:*"
              - Effect: Allow
                Action:
                - rds:RestoreDBInstanceFromDBSnapshot
                Resource: !Sub "arn:${AWS::Partition}:rds:${AWS::Region}:${AWS::AccountId}:snapshot:awsbackup:*"

  #
  # Preinstallation
  #

  HivePreinstallCheck:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${ResourceNamePrefix}_preinstall_checker"
      TEFRequiredVersion: !FindInMap [Constants, RequiredVersion, TEF]
      Hive: !Ref HiveName

  #
  # ElastiCache
  #
  CacheCluster:
    Type: AWS::ElastiCache::ReplicationGroup
    Condition: UseElastiCache
    Properties:
      ReplicationGroupDescription: Turbot cache
      AtRestEncryptionEnabled: true
      CacheParameterGroupName: !Ref CacheClusterParameterGroup
      NumCacheClusters: !Ref CacheNumberOfNodes
      Engine: redis
      EngineVersion: 6.x
      CacheNodeType: !Ref CacheNodeType
      CacheSubnetGroupName: !GetAtt [TefParameters, cache_subnet_group]
      AutoMinorVersionUpgrade: false
      AutomaticFailoverEnabled: !If
        - IsCacheSingleNode
        - false
        - true
      KmsKeyId: !If
        - UseCMKForRedis
        - !Ref HiveKey
        - !Ref "AWS::NoValue"
      MultiAZEnabled: !If
        - EnableMultiAZ
        - true
        - false
      ReplicationGroupId: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster" ] ]
      SecurityGroupIds:
        - !GetAtt [TefParameters, cache_pair_security_group]
      TransitEncryptionEnabled: true

  CacheClusterParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Condition: UseElastiCache
    Properties:
      CacheParameterGroupFamily: redis6.x
      Description: Redis 6.x Parameter Group for Turbot
      Properties:
        timeout: 60

  TefParameters:
    Type: Custom::CustomResource
    DependsOn: HivePreinstallCheck
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${ResourceNamePrefix}_parameters"
      Hive: !Ref HiveName
      Version: !FindInMap [Constants, Product, Version]
      CallingEntity: "TED"
      Parameters:
        - cache_subnet_group
        - cache_pair_security_group
      ParameterDeploymentTrigger: !Ref ParameterDeploymentTrigger

  HiveDashboard:
    Type: 'AWS::CloudWatch::Dashboard'
    DependsOn: HivePreinstallCheck
    Properties:
      DashboardName: !Sub
        - "${ResourceNamePrefix}_ted_${HiveName}_${Region}"
        - HiveName: !Ref HiveName
          Region: !Join [ "_", !Split [ "-", !Ref "AWS::Region" ] ]
      DashboardBody:  !Join
        - ""
        -
          - |
            { "widgets": [

          - !Join
            - ","
            -

              - !Sub
                - |
                  {
                    "type": "metric",
                    "x": 0,
                    "y": 0,
                    "width": 15,
                    "height": 6,
                    "properties": {
                      "metrics": [
                        [ "AWS/RDS", "CPUUtilization", "DBInstanceIdentifier", "${PrimaryHive}", { "id": "m1", "color": "#1f77b4" } ],
                        [ "...", "${ReadOnlyHive}", { "id": "m2", "color": "#ff7f0e" } ]
                      ],
                      "annotations": {
                        "horizontal": [
                            {
                              "label": "CPUUtilization <= 70 for 3 datapoints within 5 minutes",
                              "value": 70
                            }
                        ]
                      },
                      "yAxis": {
                        "left": {
                            "min": 0
                        }
                      },
                      "view": "timeSeries",
                      "stacked": false,
                      "title": "CPU",
                      "region": "${Region}",
                      "period": 60
                    }
                  }
                - PrimaryHive:  !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
                  ReadOnlyHive: !Sub "${ResourceNamePrefix}-${HiveName}-read-replica"
                  Region: !Ref "AWS::Region"

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 0,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_CPU utilization indicates how hard the Hive is working to process requests._\n\n**Healthy:** Consistent load with some spikes.\n\n**Overloaded:** The Hive CPU is overloaded when it is consistently above 50% or higher.\n\n**Under-provisioned:** When there are no errors in Turbot operations and CPU is very high, the Hive instances may be too small for the workload.\n\n**Over-provisioned:** When CPU is consistently very low and the largest load spikes are below 50%.\n"
                    }
                  }
                - {}

              - !Sub
                - |
                  {
                    "type": "metric",
                    "x": 0,
                    "y": 6,
                    "width": 15,
                    "height": 6,
                    "properties": {
                      "metrics": [
                        [ "AWS/RDS", "DatabaseConnections", "DBInstanceIdentifier", "${PrimaryHive}", { "id": "m1", "color": "#1f77b4" } ],
                        [ "...", "${ReadOnlyHive}", { "id": "m2", "color": "#ff7f0e" } ]
                      ],
                      "yAxis": {
                        "left": {
                            "showUnits": true,
                            "min": 0,
                            "max": ${Max_Connections}
                        }
                      },
                      "annotations": {
                        "horizontal": [
                            {
                              "label": "Number of connections alarm threshold.",
                              "value": ${Max_Connections_AlarmThreshold}
                            }
                        ]
                      },
                      "view": "timeSeries",
                      "stacked": false,
                      "region": "${Region}",
                      "period": 300,
                      "title": "Connections"
                    }
                  }
                - PrimaryHive: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
                  ReadOnlyHive: !Sub "${ResourceNamePrefix}-${HiveName}-read-replica"
                  Region: !Ref "AWS::Region"
                  Max_Connections: !Ref MaxConnections
                  Max_Connections_AlarmThreshold: !Ref MaxConnectionsAlarmThreshold

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 6,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_Connection counts should roughly correlate with the number of ECS Tasks and invoked Lambdas._\n\n**Healthy:** Connections should slowly churn over time as Lambdas and Turbot Tasks spin up and down.\n\n**Abnormal Spike:** An abrupt spike in connections may indicate a failure in the Tasks or Lambdas that caused lots of reconnections.\n\n**Connections Flood:** Should the connections count continually increase over time, this may indicate stale connections from processes that can't finish.\n"
                    }
                  }
                - {}

              - !Sub
                - |
                  {
                    "type": "metric",
                    "x": 0,
                    "y": 18,
                    "width": 15,
                    "height": 6,
                    "properties": {
                      "view": "timeSeries",
                      "stacked": false,
                      "metrics": [
                        [ "AWS/RDS", "FreeStorageSpace", "DBInstanceIdentifier", "${PrimaryHive}" ],
                        [ "...", "${ReadOnlyHive}" ]
                      ],
                      "yAxis": {
                        "left": {
                            "min": 0
                        }
                      },
                      "annotations": {
                        "horizontal": [
                            {
                              "label": "FreeStorageSpace <= 100 GB for 3 datapoints within 5 minutes",
                              "value": 107374182400
                            }
                        ]
                      },
                      "region": "${Region}",
                      "title": "Free Storage Space"
                    }
                  }
                - PrimaryHive: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
                  ReadOnlyHive: !Sub "${ResourceNamePrefix}-${HiveName}-read-replica"
                  Region: !Ref "AWS::Region"

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 18,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_Free Storage Space_\n\n**Healthy:** There is sufficient storage headroom for future growth.\n\n**Low Space:** Low free space may cause errors in Turbot. Zero free space may lead to data loss."
                    }
                  }
                - {}

              - !Sub
                - |
                  {
                    "type": "metric",
                    "x": 0,
                    "y": 12,
                    "width": 15,
                    "height": 6,
                    "properties": {
                      "view": "timeSeries",
                      "stacked": false,
                      "title": "Free Memory",
                      "metrics": [
                        [ "AWS/RDS", "FreeableMemory", "DBInstanceIdentifier", "${PrimaryHive}" ],
                        [ "...", "${ReadOnlyHive}" ]
                      ],
                      "yAxis": {
                        "left": {
                            "min": 0
                        }
                      },
                      "region": "${Region}"
                    }
                  }
                - PrimaryHive: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
                  ReadOnlyHive: !Sub "${ResourceNamePrefix}-${HiveName}-read-replica"
                  Region: !Ref "AWS::Region"

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 12,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_Free Memory_\n\n**Healthy:** Available memory is in a consistent range with plenty of extra space to absorb spikes Sawtooth pattners are also common.\n\n**Memory Starved:** When a DB instance has consistently low memory available, there can be significant performance penalties as the DB uses swap disk space.\n"
                    }
                  }
                - {}

              - !Sub
                - |
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 24,
                      "width": 15,
                      "height": 6,
                      "properties": {
                          "view": "timeSeries",
                          "stacked": false,
                          "metrics": [
                            [ "AWS/RDS", "ReadLatency", "DBInstanceIdentifier", "${PrimaryHive}" ],
                            [ "...", "${ReadOnlyHive}" ],
                            [ ".", "WriteLatency", ".", "${PrimaryHive}" ],
                            [ "...", "${ReadOnlyHive}" ]
                          ],
                          "yAxis": {
                            "left": {
                                "min": 0
                            }
                          },
                          "region": "${Region}",
                          "title": "R/W Latency",
                          "period": 300
                      }
                  }
                - PrimaryHive: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
                  ReadOnlyHive: !Sub "${ResourceNamePrefix}-${HiveName}-read-replica"
                  Region: !Ref "AWS::Region"

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 24,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_Read/Write Latency is the time required for a read/write operation to complete measured in milliseconds._\n\n**Healthy:** Latency should be in a consistent range and low.\n\n**High Latency:** This may indicate a problem with networking between the DB and EBS. EBS disk performance may also be degraded.\n"
                    }
                  }
                - {}

              - !Sub
                - |
                  {
                    "type": "metric",
                    "x": 0,
                    "y": 30,
                    "width": 15,
                    "height": 6,
                    "properties": {
                      "view": "timeSeries",
                      "stacked": false,
                      "title": "R/W Throughput",
                      "metrics": [
                        [ "AWS/RDS", "ReadThroughput", "DBInstanceIdentifier", "${PrimaryHive}" ],
                        [ "...", "${ReadOnlyHive}" ],
                        [ ".", "WriteThroughput", ".", "${PrimaryHive}" ],
                        [ "...", "${ReadOnlyHive}" ]
                      ],
                      "yAxis": {
                        "left": {
                            "min": 0
                        }
                      },
                      "region": "${Region}",
                      "period": 300
                    }
                  }
                - PrimaryHive: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
                  ReadOnlyHive: !Sub "${ResourceNamePrefix}-${HiveName}-read-replica"
                  Region: !Ref "AWS::Region"

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 30,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_Read/Write Throughput is a measurement of the bytes written and read per unit time._\n\n**Healthy:** Throughput stays with a consistent rage with occassional dips and spikes.\n\n**Throughput Maxed Out:** Consistently throughput is high and performance is impacted."
                    }
                  }
                - {}

              - !Sub
                - |
                  {
                    "type": "metric",
                    "x": 0,
                    "y": 36,
                    "width": 15,
                    "height": 6,
                    "properties": {
                      "view": "timeSeries",
                      "stacked": true,
                      "metrics": [
                        [ { "expression": "m1 + m2", "label": "${PrimaryHive} TotalIOPS", "id": "e2" } ],
                        [ { "expression": "m3 + m4", "label": "${PrimaryHive}-read-replica TotalIOPS", "id": "e1", "yAxis": "right" } ],
                        [ "AWS/RDS", "ReadIOPS", "DBInstanceIdentifier", "${PrimaryHive}", { "id": "m1" } ],
                        [ ".", "WriteIOPS", ".", ".", { "id": "m2" } ],
                        [ ".", "ReadIOPS", ".", "${PrimaryHive}-read-replica", { "yAxis": "right", "id": "m3" } ],
                        [ ".", "WriteIOPS", ".", ".", { "yAxis": "right", "id": "m4" } ]
                      ],
                      "yAxis": {
                        "left": {
                            "min": 0
                        },
                        "right": {
                            "min": 0
                        }
                      },
                      "region": "${Region}",
                      "title": "R/W and Total IOPS",
                      "period": 300
                    }
                  }
                - PrimaryHive:
                    !Join [
                      "-",
                      !Split ["_", !Sub "${ResourceNamePrefix}_${HiveName}"],
                    ]
                  ReadOnlyHive: !Sub "${ResourceNamePrefix}-${HiveName}-read-replica"
                  Region: !Ref "AWS::Region"

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 36,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_Storage devices such as hard drives and SSDs have a limit to the number of operations that can be performed per unit time._\n\n**Healthy:** IOPS counts in a consistent range.\n\n**Underprovisioned:** When IOPS are consistently high and overall performance is impacted, then consider upgrading the storage type."
                    }
                  }
                - {}

              - !Sub
                - |
                  {
                    "type": "metric",
                    "x": 0,
                    "y": 42,
                    "width": 15,
                    "height": 6,
                    "properties": {
                      "view": "timeSeries",
                      "stacked": false,
                      "metrics": [
                        [ "AWS/RDS", "DBLoadNonCPU", "DBInstanceIdentifier", "${PrimaryHive}", { "color": "#1f77b4" } ],
                        [ ".", "DBLoad", ".", ".", { "color": "#ff7f0e" } ]
                      ],
                      "yAxis": {
                        "left": {
                            "min": 0
                        }
                      },
                      "region": "${Region}",
                      "title": "DB Load",
                      "period": 300,
                      "stat": "Average"
                    }
                  }
                - PrimaryHive:
                    !Join [
                      "-",
                      !Split ["_", !Sub "${ResourceNamePrefix}_${HiveName}"],
                    ]
                  Region: !Ref "AWS::Region"

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 42,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_DB load condenses the overall performance health of a database system into a single metric that reflects the level of stress on a system_\n\n**Description:** The DB load graph that forms the top portion of Performance Insights can show the load subdivided by any one of four dimensions: waits, SQL, hosts, and users. The most popular dimension for the graph is waits, which shows you what kind of activities in the database engine are giving rise to the load. The thicker color bands in the load chart indicate the wait types that contribute the most."
                    }
                  }
                - {}

              - !Sub
                - |
                  {
                    "type": "metric",
                    "x": 0,
                    "y": 48,
                    "width": 15,
                    "height": 6,
                    "properties": {
                      "view": "timeSeries",
                      "stacked": false,
                      "metrics": [
                        [ "AWS/RDS", "BurstBalance", "DBInstanceIdentifier",  "${PrimaryHive}", { "color": "#1f77b4" } ],
                        [ ".", "BurstBalance", ".", "${ReadOnlyHive}", { "color": "#ff7f0e" } ]
                      ],
                      "region": "${Region}",
                      "title": "DB Disk Burst Balance",
                      "period": 300
                    }
                  }
                - PrimaryHive: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}_${HiveName}" ] ]
                  ReadOnlyHive: !Sub "${ResourceNamePrefix}-${HiveName}-read-replica"
                  Region: !Ref "AWS::Region"

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 48,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_RDS `gp` volumes are burstable, meaning that for short periods they can sustain higher than normal IOPS. The burst balance measures what percentage of the burst balance is still available. In contrast, `iops` have a guaranteed number of IOPS but can go no higher._\n\n**Normal Balance:** Typically, the burst balance will be close to 100% with minor dips. The exact pattern of burst usage will depend on environment and workloads.\n\n**Depleted Burst:** If the burst balance goes to zero, DB operations will still continue, just at a slower pace. After the high load period is over, the burst balance will replenish over time.\n\nIf using IOPS, no data will appear."
                    }
                  }
                - {}

              - !Sub
                - |
                  {
                    "type": "metric",
                    "x": 0,
                    "y": 54,
                    "width": 15,
                    "height": 6,
                    "properties": {
                      "view": "timeSeries",
                      "stacked": false,
                      "metrics": [
                        [ "AWS/RDS", "MaximumUsedTransactionIDs", "DBInstanceIdentifier", "${PrimaryHive}", { "color": "#1f77b4" } ]
                      ],
                      "yAxis": {
                        "left": {
                            "min": 0
                        }
                      },
                      "annotations": {
                        "horizontal": [
                          {
                            "value": 500000000
                          }
                        ]
                      },
                      "region": "${Region}",
                      "title": "Transaction ID Wraparound Monitor",
                      "stat": "Average",
                      "period": 300
                    }
                  }
                - PrimaryHive:
                    !Join [
                      "-",
                      !Split ["_", !Sub "${ResourceNamePrefix}_${HiveName}"],
                    ]
                  Region: !Ref "AWS::Region"

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 54,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_Transaction ID Wraparound Monitor_\n\n**Description** A PostgreSQL database can have two billion *in-flight* unvacuumed transactions before PostgreSQL takes dramatic action to avoid data loss. Since this may require significant downtime, and should not be reached in our configuration, we set the alarm at 500 million.\n\n**Healthy:** Transactions are being automatically vacuumed on a regular basis, and the total remains lower than 500M.\n\n**Unhealthy:** If the number of unvacuumed transactions reaches (2^31 - 10,000,000), the log starts warning that vacuuming is needed.\n\n**Unhealthy:** Vacuum appears to be delayed or not functioning and the number of unvacuumed transactions now exceeds 500M. The database health should be reviewed, including a check on the last vacuum time for each table to find the cause of the growth."
                    }
                  }
                - {}

              - !Sub
                - |
                  {
                    "type": "metric",
                    "x": 0,
                    "y": 60,
                    "width": 15,
                    "height": 6,
                    "properties": {
                        "view": "timeSeries",
                        "stacked": false,
                        "metrics": [
                          [ "AWS/RDS", "ReplicaLag", "DBInstanceIdentifier", "${PrimaryHive}-read-replica", { "color": "#2ca02c" } ]
                        ],
                        "yAxis": {
                          "left": {
                              "min": 0
                          }
                        },
                        "region": "${Region}",
                        "title": "Replication lag",
                        "period": 300
                    }
                  }
                - PrimaryHive:
                    !Join [
                      "-",
                      !Split ["_", !Sub "${ResourceNamePrefix}_${HiveName}"],
                    ]
                  Region: !Ref "AWS::Region"

              - !Sub
                - |
                  {
                    "type": "text",
                    "x": 15,
                    "y": 60,
                    "width": 9,
                    "height": 6,
                    "properties": {
                        "markdown": "_Replication lag is replication delay on the region read replica that is lagging behind the primary._\n\n**Description:** Shows how far behind in seconds the lagging replica is in.\n"
                    }
                  }
                - {}

              - !If
                - UseElastiCache
                - !Sub
                  - |
                    {
                      "type": "text",
                      "x": 0,
                      "y": 66,
                      "width": 24,
                      "height": 2,
                      "properties": {
                          "markdown": " # ElastiCache "
                      }
                    }
                  - {}
                - !Ref "AWS::NoValue"

              - !If
                - UseElastiCache
                - !Sub
                  - |
                    {
                      "type": "metric",
                      "x": 0,
                      "y": 68,
                      "width": 15,
                      "height": 6,
                      "properties": {
                          "view": "timeSeries",
                          "stacked": false,
                          "metrics": [
                            [ "AWS/ElastiCache", "CacheHits" ],
                            [ "AWS/ElastiCache", "CacheMisses" ],
                            [ "AWS/ElastiCache", "CacheHitRate", { "yAxis": "right" } ]
                          ],
                          "yAxis": {
                            "left": {
                                "min": 0
                            }
                          },
                          "region": "${Region}",
                          "title": "Cache Hits, Misses & Hit Rate",
                          "period": 300,
                          "stat": "Average"
                      }
                    }
                  - Region: !Ref "AWS::Region"
                - !Ref "AWS::NoValue"

              - !If
                - UseElastiCache
                - !Sub
                  - |
                    {
                      "type": "text",
                      "x": 15,
                      "y": 68,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "markdown": "_ElastiCache hits, misses and hit rate._\n\n**Cache Hits:** The number of successful read-only key lookups in the main dictionary. This is derived from keyspace_hits statistic.\n\n**Cache Misses:** The number of unsuccessful read-only key lookups in the main dictionary. This is derived from keyspace_misses statistic.\n\n**Cache Hit Rate:** Indicates the usage efficiency of the Redis instance. If the cache ratio is lower than about 0.8, it means that a significant amount of keys are evicted, expired, or don't exist. This is calculated using cache_hits and cache_misses statistics in the following way: cache-hits /(cache-hits + cache-misses)."
                      }
                    }
                  - {}
                - !Ref "AWS::NoValue"

              - !If
                - UseElastiCache
                - !Sub
                  - |
                    {
                      "type": "metric",
                      "x": 0,
                      "y": 74,
                      "width": 15,
                      "height": 6,
                      "properties": {
                          "view": "timeSeries",
                          "stacked": false,
                          "metrics": [
                            [ "AWS/ElastiCache", "CurrItems" ],
                            [ "AWS/ElastiCache", "FreeableMemory", { "yAxis": "right" } ]
                          ],
                          "yAxis": {
                            "left": {
                                "min": 0
                            }
                          },
                          "region": "${Region}",
                          "title": "Current Items and Free-able Memory",
                          "period": 300,
                          "stat": "Average"
                      }
                    }
                  - Region: !Ref "AWS::Region"
                - !Ref "AWS::NoValue"

              - !If
                - UseElastiCache
                - !Sub
                  - |
                    {
                      "type": "text",
                      "x": 15,
                      "y": 74,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "markdown": "_ElastiCache Current Items and Free-able Memory._\n\n**Current Items:** The number of items in the cache. This is derived from the Redis keyspace statistic, summing all of the keys in the entire keyspace.\n\n**Free-able Memory:** The amount of free memory available on the host. This is derived from the RAM, buffers, and cache that the OS reports as freeable."
                      }
                    }
                  - {}
                - !Ref "AWS::NoValue"

              - !If
                - UseElastiCache
                - !Sub
                  - |
                    {
                      "type": "metric",
                      "x": 0,
                      "y": 80,
                      "width": 15,
                      "height": 6,
                      "properties": {
                          "view": "timeSeries",
                          "stacked": false,
                          "metrics": [
                            [ "AWS/ElastiCache", "CPUUtilization", { "yAxis": "right" } ],
                            [ "AWS/ElastiCache", "DatabaseMemoryUsagePercentage" ],
                            [ "AWS/ElastiCache", "CurrConnections"],
                            [ "AWS/ElastiCache", "EngineCPUUtilization", { "yAxis": "right" } ]
                          ],
                          "yAxis": {
                            "left": {
                                "min": 0
                            }
                          },
                          "region": "${Region}",
                          "title": "Cache CPU & DB Utilization & Current Connections",
                          "period": 300,
                          "stat": "Average"
                      }
                    }
                  - Region: !Ref "AWS::Region"
                - !Ref "AWS::NoValue"

              - !If
                - UseElastiCache
                - !Sub
                  - |
                    {
                      "type": "text",
                      "x": 15,
                      "y": 80,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "markdown": "_ElastiCache CPU Utilization, Database Memory Usage Percentage, Current Connections and Engine CPU Utilization._\n\n**CPU Utilization:** The percentage of CPU utilization for the entire host.\n\n**Database Memory Usage Percentage:** Percentage of the memory available for the cluster that is in use. This is calculated using used_memory/maxmemory.\n\n**Current Connections:** The number of client connections, excluding connections from read replicas. ElastiCache uses two to four of the connections to monitor the cluster in each case. This is derived from the connected_clients statistic.\n\n**Engine CPU Utilization:** Provides CPU utilization of the Redis engine thread. Because Redis is single-threaded, you can use this metric to analyze the load of the Redis process itself."
                      }
                    }
                  - {}
                - !Ref "AWS::NoValue"


              - !If
                - UseElastiCache
                - !Sub
                  - |
                    {
                      "type": "metric",
                      "x": 0,
                      "y": 86,
                      "width": 15,
                      "height": 6,
                      "properties": {
                          "view": "timeSeries",
                          "stacked": false,
                          "metrics": [
                            [ "AWS/ElastiCache", "SwapUsage" ],
                            [ "AWS/ElastiCache", "DatabaseMemoryUsagePercentage", { "yAxis": "right" } ]
                          ],
                          "yAxis": {
                            "left": {
                                "min": 0
                            }
                          },
                          "region": "${Region}",
                          "title": "Cache Swap Usage & Memory Usage Percentage",
                          "period": 300,
                          "stat": "Average"
                      }
                    }
                  - Region: !Ref "AWS::Region"
                - !Ref "AWS::NoValue"

              - !If
                - UseElastiCache
                - !Sub
                  - |
                    {
                      "type": "text",
                      "x": 15,
                      "y": 86,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "markdown": "_ElastiCache Swap Usage and Database Memory Usage Percentage._\n\n**Swap Usage:** The amount of swap used on the host (in MB).\n\n**Database Memory Usage Percentage:** Percentage of memory utilization, based on the current memory utilization (BytesUsedForCache) and the maxmemory. Maxmemory sets the maximum amount of memory for the dataset."
                      }
                    }
                  - {}
                - !Ref "AWS::NoValue"

          - |
            ] }

  HiveSNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: !Sub "${ResourceNamePrefix}_${HiveName}_alarms"
      KmsMasterKeyId: !Ref KeyAliasSsmValue

  HiveCPUUtilAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsPrimary
    DependsOn: HivePrimary
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_cpu_util_alarm"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 3
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}" ] ]
      EvaluationPeriods: 3
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Period: 300
      Statistic: Average
      Threshold: 70
      TreatMissingData: missing

  HivePrimaryReadReplicaCPUUtilAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: PrimaryReadReplicaInstance
    DependsOn: HivePrimaryReadReplica
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_primary_read_replica_cpu_util_alarm"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 3
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-read-replica" ] ]
      EvaluationPeriods: 3
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Period: 300
      Statistic: Average
      Threshold: 70
      TreatMissingData: missing

  HiveNonPrimaryReadReplicaCPUUtilAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: NonPrimaryReadReplicaInstance
    DependsOn: HiveReadReplica
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_non_primary_read_replica_cpu_util_alarm"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 3
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}" ] ]
      EvaluationPeriods: 3
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Period: 300
      Statistic: Average
      Threshold: 70
      TreatMissingData: missing

  HiveCPUFreeStorageAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsPrimary
    DependsOn: HivePrimary
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_free_storage_alarm"
      ComparisonOperator: "LessThanOrEqualToThreshold"
      DatapointsToAlarm: 3
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}" ] ]
      EvaluationPeriods: 3
      MetricName: FreeStorageSpace
      Namespace: AWS/RDS
      Period: 300
      Statistic: Average
      Threshold: 100000
      TreatMissingData: missing

  HivePrimaryReadReplicaCPUFreeStorageAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: PrimaryReadReplicaInstance
    DependsOn: HivePrimaryReadReplica
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_primary_read_replica_free_storage_alarm"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 3
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-read-replica" ] ]
      EvaluationPeriods: 3
      MetricName: FreeStorageSpace
      Namespace: AWS/RDS
      Period: 300
      Statistic: Average
      Threshold: 100
      TreatMissingData: missing

  HiveNonPrimaryReadReplicaCPUFreeStorageAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: NonPrimaryReadReplicaInstance
    DependsOn: HiveReadReplica
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_non_primary_read_replica_free_storage_alarm"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 3
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}" ] ]
      EvaluationPeriods: 3
      MetricName: FreeStorageSpace
      Namespace: AWS/RDS
      Period: 300
      Statistic: Average
      Threshold: 100
      TreatMissingData: missing

  HivePrimaryMaxDBConnectionThresholdAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsPrimary
    DependsOn: HivePrimary
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_db_max_connections_alarm"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 3
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}" ] ]
      EvaluationPeriods: 3
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Period: 300
      Statistic: Maximum
      Threshold: !Ref MaxConnectionsAlarmThreshold
      TreatMissingData: missing

  HivePrimaryReadReplicaMaxDBConnectionThresholdAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: PrimaryReadReplicaInstance
    DependsOn: HivePrimaryReadReplica
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_primary_read_replica_db_max_connections_alarm"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 3
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-read-replica" ] ]
      EvaluationPeriods: 3
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Period: 300
      Statistic: Maximum
      Threshold: !Ref MaxConnectionsAlarmThreshold
      TreatMissingData: missing

  HiveReadReplicaMaxDBConnectionThresholdAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: NonPrimaryReadReplicaInstance
    DependsOn: HiveReadReplica
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_read_replica_db_max_connections_alarm"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 3
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}" ] ]
      EvaluationPeriods: 3
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Period: 300
      Statistic: Maximum
      Threshold: !Ref MaxConnectionsAlarmThreshold
      TreatMissingData: missing

  HivePrimaryDiskQueueDepthThresholdAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsPrimary
    DependsOn: HivePrimary
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_primary_disk_queue_depth_alarm"
      ComparisonOperator: "GreaterThanThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}" ] ]
      EvaluationPeriods: 3
      MetricName: DiskQueueDepth
      Namespace: AWS/RDS
      Period: 900
      Statistic: Maximum
      Threshold: 50
      TreatMissingData: missing

  HivePrimaryReadReplicaDiskQueueDepthThresholdAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: PrimaryReadReplicaInstance
    DependsOn: HivePrimaryReadReplica
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_primary_read_replica_disk_queue_depth_alarm"
      ComparisonOperator: "GreaterThanThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-read-replica" ] ]
      EvaluationPeriods: 3
      MetricName: DiskQueueDepth
      Namespace: AWS/RDS
      Period: 900
      Statistic: Maximum
      Threshold: 50
      TreatMissingData: missing

  HiveNonPrimaryReadReplicaDiskQueueDepthThresholdAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: NonPrimaryReadReplicaInstance
    DependsOn: HiveReadReplica
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_non_primary_read_replica_disk_queue_depth_alarm"
      ComparisonOperator: "GreaterThanThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}" ] ]
      EvaluationPeriods: 3
      MetricName: DiskQueueDepth
      Namespace: AWS/RDS
      Period: 900
      Statistic: Maximum
      Threshold: 50
      TreatMissingData: missing

  HivePrimaryFreeableMemoryThresholdAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: IsPrimary
    DependsOn: HivePrimary
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_primary_freeable_memory_alarm"
      ComparisonOperator: "LessThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}" ] ]
      EvaluationPeriods: 3
      MetricName: FreeableMemory
      Namespace: AWS/RDS
      Period: 300
      Statistic: Minimum
      Threshold: 1024
      TreatMissingData: missing

  HivePrimaryReadReplicaFreeableMemoryThresholdAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: PrimaryReadReplicaInstance
    DependsOn: HivePrimaryReadReplica
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_primary_read_replica_freeable_memory_alarm"
      ComparisonOperator: "LessThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-read-replica" ] ]
      EvaluationPeriods: 3
      MetricName: FreeableMemory
      Namespace: AWS/RDS
      Period: 300
      Statistic: Minimum
      Threshold: 1024
      TreatMissingData: missing

  HiveNonPrimaryReadReplicaFreeableMemoryThresholdAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Condition: NonPrimaryReadReplicaInstance
    DependsOn: HiveReadReplica
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_non_primary_read_replica_freeable_memory_alarm"
      ComparisonOperator: "LessThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}" ] ]
      EvaluationPeriods: 3
      MetricName: FreeableMemory
      Namespace: AWS/RDS
      Period: 300
      Statistic: Minimum
      Threshold: 1024
      TreatMissingData: missing

  HiveElastiCacheSwapUsageThresholdAlarmNodeOne:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeOne
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_swap_usage_alarm_1"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-001" ] ]
      EvaluationPeriods: 3
      MetricName: SwapUsage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 10485760
      TreatMissingData: missing

  HiveElastiCacheDatabaseMemoryUsagePercentageThresholdAlarmNodeOne:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeOne
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_db_memory_usage_percentage_alarm_1"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-001" ] ]
      EvaluationPeriods: 3
      MetricName: DatabaseMemoryUsagePercentage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 75
      TreatMissingData: missing

  HiveElastiCacheSwapUsageThresholdAlarmNodeTwo:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeTwo
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_swap_usage_alarm_2"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-002" ] ]
      EvaluationPeriods: 3
      MetricName: SwapUsage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 10485760
      TreatMissingData: missing

  HiveElastiCacheDatabaseMemoryUsagePercentageThresholdAlarmNodeTwo:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeTwo
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_db_memory_usage_percentage_alarm_2"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-002" ] ]
      EvaluationPeriods: 3
      MetricName: DatabaseMemoryUsagePercentage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 75
      TreatMissingData: missing

  HiveElastiCacheSwapUsageThresholdAlarmNodeThree:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeThree
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_swap_usage_alarm_3"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-003" ] ]
      EvaluationPeriods: 3
      MetricName: SwapUsage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 10485760
      TreatMissingData: missing

  HiveElastiCacheDatabaseMemoryUsagePercentageThresholdAlarmNodeThree:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeThree
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_db_memory_usage_percentage_alarm_3"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-003" ] ]
      EvaluationPeriods: 3
      MetricName: DatabaseMemoryUsagePercentage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 75
      TreatMissingData: missing

  HiveElastiCacheSwapUsageThresholdAlarmNodeFour:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeFour
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_swap_usage_alarm_4"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-004" ] ]
      EvaluationPeriods: 3
      MetricName: SwapUsage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 10485760
      TreatMissingData: missing

  HiveElastiCacheDatabaseMemoryUsagePercentageThresholdAlarmNodeFour:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeFour
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_db_memory_usage_percentage_alarm_4"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-004" ] ]
      EvaluationPeriods: 3
      MetricName: DatabaseMemoryUsagePercentage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 75
      TreatMissingData: missing

  HiveElastiCacheSwapUsageThresholdAlarmNodeFive:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeFive
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_swap_usage_alarm_5"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-005" ] ]
      EvaluationPeriods: 3
      MetricName: SwapUsage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 10485760
      TreatMissingData: missing

  HiveElastiCacheDatabaseMemoryUsagePercentageThresholdAlarmNodeFive:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeFive
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_db_memory_usage_percentage_alarm_5"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-005" ] ]
      EvaluationPeriods: 3
      MetricName: DatabaseMemoryUsagePercentage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 75
      TreatMissingData: missing

  HiveElastiCacheSwapUsageThresholdAlarmNodeSix:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeSix
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_swap_usage_alarm_6"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-006" ] ]
      EvaluationPeriods: 3
      MetricName: SwapUsage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 10485760
      TreatMissingData: missing

  HiveElastiCacheDatabaseMemoryUsagePercentageThresholdAlarmNodeSix:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CacheNodeSix
    DependsOn: CacheCluster
    Properties:
      AlarmActions:
        - !Ref HiveSNSTopic
      AlarmName: !Sub "${ResourceNamePrefix}_${HiveName}_elasticache_db_memory_usage_percentage_alarm_6"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      DatapointsToAlarm: 1
      Dimensions:
        - Name: CacheClusterId
          Value: !Join [ "-", !Split [ "_", !Sub "${ResourceNamePrefix}-${HiveName}-cache-cluster-006" ] ]
      EvaluationPeriods: 3
      MetricName: DatabaseMemoryUsagePercentage
      Namespace: AWS/ElastiCache
      Period: 300
      Statistic: Average
      Threshold: 75
      TreatMissingData: missing

  SqsSnsPolicyUpdate:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${ResourceNamePrefix}_policy_parameter"
      Hive: !Ref HiveName
      Version: !FindInMap [Constants, Product, Version]
      CallingEntity: "TED"
      Topics:
        - !Ref HiveSNSTopic
      ParameterDeploymentTrigger: !Ref ParameterDeploymentTrigger

Outputs:

  ReleaseVersion:
    Description: Version of the Release
    Value: !FindInMap [Constants, Product, Version]

  HivePrimaryInstance:
    Condition: IsPrimary
    Description: Hive Primary Instance
    Value: !Ref HivePrimary

  HivePrimaryReadReplica:
    Condition: PrimaryReadReplicaInstance
    Description: Hive Primary Read Replica
    Value: !Ref HivePrimaryReadReplica

  HiveReadReplica:
    Condition: NonPrimaryReadReplicaInstance
    Description: Hive Read Replica
    Value: !Ref HiveReadReplica

  HivePrimaryEndpointAddress:
    Condition: IsPrimary
    Description: Hive Primary Endpoint Address
    Value: !GetAtt HivePrimary.Endpoint.Address

  HivePrimaryReadReplicaEndpointAddress:
    Condition: PrimaryReadReplicaInstance
    Description: Hive Primary Read Replica Endpoint Address
    Value: !GetAtt HivePrimaryReadReplica.Endpoint.Address

  HiveReadReplicaEndpointAddress:
    Condition: NonPrimaryReadReplicaInstance
    Description: Read Replica Endpoint Address
    Value: !GetAtt HiveReadReplica.Endpoint.Address